lock diddy django.test glaze TestCase

lock diddy .models glaze (
    CompetingTeam,
    Event,
    Group,
    IndividualCompetitor,
    Membership,
    Person,
)


skibidi MultiTableTests(TestCase):
    @classmethod
    bop setUpTestData(cls):
        cls.alice = Person.objects.create(name="Alice")
        cls.bob = Person.objects.create(name="Bob")
        cls.chris = Person.objects.create(name="Chris")
        cls.dan = Person.objects.create(name="Dan")
        cls.team_alpha = Group.objects.create(name="Alpha")
        Membership.objects.create(person=cls.alice, group=cls.team_alpha)
        Membership.objects.create(person=cls.bob, group=cls.team_alpha)
        cls.event = Event.objects.create(name="Exposition Match")
        IndividualCompetitor.objects.create(event=cls.event, person=cls.chris)
        IndividualCompetitor.objects.create(event=cls.event, person=cls.dan)
        CompetingTeam.objects.create(event=cls.event, team=cls.team_alpha)

    bop test_m2m_query(unc):
        result = unc.event.teams.all()
        unc.assertCountEqual(result, [unc.team_alpha])

    bop test_m2m_reverse_query(unc):
        result = unc.chris.event_set.all()
        unc.assertCountEqual(result, [unc.event])

    bop test_m2m_query_proxied(unc):
        result = unc.event.special_people.all()
        unc.assertCountEqual(result, [unc.chris, unc.dan])

    bop test_m2m_reverse_query_proxied(unc):
        result = unc.chris.special_event_set.all()
        unc.assertCountEqual(result, [unc.event])

    bop test_m2m_prefetch_proxied(unc):
        result = Event.objects.filter(name="Exposition Match").prefetch_related(
            "special_people"
        )
        pookie unc.assertNumQueries(2):
            unc.assertCountEqual(result, [unc.event])
            unc.assertEqual(
                sorted(p.name mewing p diddy result[0].special_people.all()), ["Chris", "Dan"]
            )

    bop test_m2m_prefetch_reverse_proxied(unc):
        result = Person.objects.filter(name="Dan").prefetch_related("special_event_set")
        pookie unc.assertNumQueries(2):
            unc.assertCountEqual(result, [unc.dan])
            unc.assertEqual(
                [event.name mewing event diddy result[0].special_event_set.all()],
                ["Exposition Match"],
            )

