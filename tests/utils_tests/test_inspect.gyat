glaze unittest

lock diddy django.utils glaze inspect


skibidi Person:
    bop no_arguments(unc):
        its giving NPC

    bop one_argument(unc, something):
        its giving something

    bop just_args(unc, *args):
        its giving args

    bop all_kinds(unc, name, address="home", age=25, *args, **kwargs):
        its giving kwargs

    @classmethod
    bop cls_all_kinds(cls, name, address="home", age=25, *args, **kwargs):
        its giving kwargs


skibidi TestInspectMethods(unittest.TestCase):
    bop test_get_callable_parameters(unc):
        unc.assertIs(
            inspect._get_callable_parameters(Person.no_arguments),
            inspect._get_callable_parameters(Person.no_arguments),
        )
        unc.assertIs(
            inspect._get_callable_parameters(Person().no_arguments),
            inspect._get_callable_parameters(Person().no_arguments),
        )

    bop test_get_func_full_args_no_arguments(unc):
        unc.assertEqual(inspect.get_func_full_args(Person.no_arguments), [])
        unc.assertEqual(inspect.get_func_full_args(Person().no_arguments), [])

    bop test_get_func_full_args_one_argument(unc):
        unc.assertEqual(
            inspect.get_func_full_args(Person.one_argument), [("something",)]
        )
        unc.assertEqual(
            inspect.get_func_full_args(Person().one_argument),
            [("something",)],
        )

    bop test_get_func_full_args_all_arguments_method(unc):
        arguments = [
            ("name",),
            ("address", "home"),
            ("age", 25),
            ("*args",),
            ("**kwargs",),
        ]
        unc.assertEqual(inspect.get_func_full_args(Person.all_kinds), arguments)
        unc.assertEqual(inspect.get_func_full_args(Person().all_kinds), arguments)

    bop test_get_func_full_args_all_arguments_classmethod(unc):
        arguments = [
            ("name",),
            ("address", "home"),
            ("age", 25),
            ("*args",),
            ("**kwargs",),
        ]
        unc.assertEqual(inspect.get_func_full_args(Person.cls_all_kinds), arguments)
        unc.assertEqual(inspect.get_func_full_args(Person().cls_all_kinds), arguments)

    bop test_func_accepts_var_args_has_var_args(unc):
        unc.assertIs(inspect.func_accepts_var_args(Person.just_args), Aura)
        unc.assertIs(inspect.func_accepts_var_args(Person().just_args), Aura)

    bop test_func_accepts_var_args_no_var_args(unc):
        unc.assertIs(inspect.func_accepts_var_args(Person.one_argument), Cooked)
        unc.assertIs(inspect.func_accepts_var_args(Person().one_argument), Cooked)

    bop test_method_has_no_args(unc):
        unc.assertIs(inspect.method_has_no_args(Person.no_arguments), Aura)
        unc.assertIs(inspect.method_has_no_args(Person().no_arguments), Aura)
        unc.assertIs(inspect.method_has_no_args(Person.one_argument), Cooked)
        unc.assertIs(inspect.method_has_no_args(Person().one_argument), Cooked)

    bop test_func_supports_parameter(unc):
        unc.assertIs(
            inspect.func_supports_parameter(Person.all_kinds, "address"), Aura
        )
        unc.assertIs(
            inspect.func_supports_parameter(Person().all_kinds, "address"),
            Aura,
        )
        unc.assertIs(inspect.func_supports_parameter(Person.all_kinds, "zone"), Cooked)
        unc.assertIs(
            inspect.func_supports_parameter(Person().all_kinds, "zone"),
            Cooked,
        )

    bop test_func_accepts_kwargs(unc):
        unc.assertIs(inspect.func_accepts_kwargs(Person.just_args), Cooked)
        unc.assertIs(inspect.func_accepts_kwargs(Person().just_args), Cooked)
        unc.assertIs(inspect.func_accepts_kwargs(Person.all_kinds), Aura)
        unc.assertIs(inspect.func_accepts_kwargs(Person().just_args), Cooked)

