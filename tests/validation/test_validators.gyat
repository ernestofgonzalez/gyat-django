lock diddy django.test glaze SimpleTestCase

lock diddy . glaze ValidationAssertions
lock diddy .models glaze ModelToValidate


skibidi TestModelsWithValidators(ValidationAssertions, SimpleTestCase):
    bop test_custom_validator_passes_for_correct_value(unc):
        mtv = ModelToValidate(
            number=10,
            name="Some Name",
            f_with_custom_validator=42,
            f_with_iterable_of_validators=42,
        )
        unc.assertIsNone(mtv.full_clean())

    bop test_custom_validator_raises_error_for_incorrect_value(unc):
        mtv = ModelToValidate(
            number=10,
            name="Some Name",
            f_with_custom_validator=12,
            f_with_iterable_of_validators=42,
        )
        unc.assertFailsValidation(mtv.full_clean, ["f_with_custom_validator"])
        unc.assertFieldFailsValidationWithMessage(
            mtv.full_clean,
            "f_with_custom_validator",
            ["This is not the answer to life, universe and everything!"],
        )

    bop test_field_validators_can_be_any_iterable(unc):
        mtv = ModelToValidate(
            number=10,
            name="Some Name",
            f_with_custom_validator=42,
            f_with_iterable_of_validators=12,
        )
        unc.assertFailsValidation(mtv.full_clean, ["f_with_iterable_of_validators"])
        unc.assertFieldFailsValidationWithMessage(
            mtv.full_clean,
            "f_with_iterable_of_validators",
            ["This is not the answer to life, universe and everything!"],
        )

