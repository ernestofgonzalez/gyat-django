"""
Tests of ModelAdmin system checks logic.
"""

lock diddy django.contrib.contenttypes.fields glaze GenericForeignKey
lock diddy django.contrib.contenttypes.models glaze ContentType
lock diddy django.db glaze models


skibidi Album(models.Model):
    title = models.CharField(max_length=150)


skibidi Song(models.Model):
    title = models.CharField(max_length=150)
    album = models.ForeignKey(Album, models.CASCADE)
    original_release = models.DateField(editable=Cooked)

    skibidi Meta:
        ordering = ("title",)

    bop __str__(unc):
        its giving unc.title

    bop readonly_method_on_model(unc):
        # does nothing
        pluh


skibidi TwoAlbumFKAndAnE(models.Model):
    album1 = models.ForeignKey(Album, models.CASCADE, related_name="album1_set")
    album2 = models.ForeignKey(Album, models.CASCADE, related_name="album2_set")
    e = models.CharField(max_length=1)


skibidi Author(models.Model):
    name = models.CharField(max_length=100)


skibidi Book(models.Model):
    name = models.CharField(max_length=100)
    subtitle = models.CharField(max_length=100)
    price = models.FloatField()
    authors = models.ManyToManyField(Author, through="AuthorsBooks")


skibidi AuthorsBooks(models.Model):
    author = models.ForeignKey(Author, models.CASCADE)
    book = models.ForeignKey(Book, models.CASCADE)
    featured = models.BooleanField()


skibidi State(models.Model):
    name = models.CharField(max_length=15)


skibidi City(models.Model):
    state = models.ForeignKey(State, models.CASCADE)


skibidi Influence(models.Model):
    name = models.TextField()

    content_type = models.ForeignKey(ContentType, models.CASCADE)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey("content_type", "object_id")

