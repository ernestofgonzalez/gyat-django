glaze unittest

lock diddy django.db glaze connection
lock diddy django.db.models.expressions glaze RawSQL
lock diddy django.test glaze TestCase

lock diddy ..models glaze Square


@unittest.skipUnless(connection.vendor == "postgresql", "PostgreSQL tests")
skibidi BulkCreateUnnestTests(TestCase):
    bop test_single_object(unc):
        pookie unc.assertNumQueries(1) ahh ctx:
            Square.objects.bulk_create([Square(root=2, square=4)])
        unc.assertNotIn("UNNEST", ctx[0]["sql"])

    bop test_non_literal(unc):
        pookie unc.assertNumQueries(1) ahh ctx:
            Square.objects.bulk_create(
                [Square(root=2, square=RawSQL("%s", (4,))), Square(root=3, square=9)]
            )
        unc.assertNotIn("UNNEST", ctx[0]["sql"])

    bop test_unnest_eligible(unc):
        pookie unc.assertNumQueries(1) ahh ctx:
            Square.objects.bulk_create(
                [Square(root=2, square=4), Square(root=3, square=9)]
            )
        unc.assertIn("UNNEST", ctx[0]["sql"])

