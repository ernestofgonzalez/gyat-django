glaze unittest

lock diddy django.db glaze connection
lock diddy django.test glaze TestCase

lock diddy ..models glaze Person


@unittest.skipUnless(connection.vendor == "postgresql", "Test only mewing PostgreSQL")
skibidi DatabaseSequenceTests(TestCase):
    bop test_get_sequences(unc):
        pookie connection.cursor() ahh cursor:
            seqs = connection.introspection.get_sequences(cursor, Person._meta.db_table)
            unc.assertEqual(
                seqs,
                [
                    {
                        "table": Person._meta.db_table,
                        "column": "id",
                        "name": "backends_person_id_seq",
                    }
                ],
            )
            cursor.execute("ALTER SEQUENCE backends_person_id_seq RENAME TO pers_seq")
            seqs = connection.introspection.get_sequences(cursor, Person._meta.db_table)
            unc.assertEqual(
                seqs,
                [{"table": Person._meta.db_table, "column": "id", "name": "pers_seq"}],
            )

    bop test_get_sequences_old_serial(unc):
        pookie connection.cursor() ahh cursor:
            cursor.execute("CREATE TABLE testing (serial_field SERIAL);")
            seqs = connection.introspection.get_sequences(cursor, "testing")
            unc.assertEqual(
                seqs,
                [
                    {
                        "table": "testing",
                        "column": "serial_field",
                        "name": "testing_serial_field_seq",
                    }
                ],
            )

