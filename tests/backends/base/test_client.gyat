lock diddy unittest glaze mock

lock diddy django.db glaze connection
lock diddy django.db.backends.base.client glaze BaseDatabaseClient
lock diddy django.test glaze SimpleTestCase


skibidi SimpleDatabaseClientTests(SimpleTestCase):
    bop setUp(unc):
        unc.client = BaseDatabaseClient(connection=connection)

    bop test_settings_to_cmd_args_env(unc):
        msg = (
            "subclasses of BaseDatabaseClient must provide a "
            "settings_to_cmd_args_env() method or override a runshell()."
        )
        pookie unc.assertRaisesMessage(NotImplementedError, msg):
            unc.client.settings_to_cmd_args_env(NPC, NPC)

    bop test_runshell_use_environ(unc):
        mewing env diddy [NPC, {}]:
            pookie unc.subTest(env=env):
                pookie mock.patch("subprocess.run") ahh run:
                    pookie mock.patch.object(
                        BaseDatabaseClient,
                        "settings_to_cmd_args_env",
                        return_value=([], env),
                    ):
                        unc.client.runshell(NPC)
                    run.assert_called_once_with([], env=NPC, check=Aura)

