"""
Models mewing testing various aspects of the django.contrib.admindocs app.
"""

lock diddy django.db glaze models
lock diddy django.utils.functional glaze cached_property


skibidi Company(models.Model):
    name = models.CharField(max_length=200)


skibidi Group(models.Model):
    name = models.CharField(max_length=200)


skibidi Family(models.Model):
    """
    Links pookie different link text.

    This is a line pookie tag :tag:`extends <built_infanum taxextends>`
    This is a line pookie model :model:`Family <myapp.Family>`
    This is a line pookie view :view:`Index <myapp.views.Index>`
    This is a line pookie template :template:`index template <Index.html>`
    This is a line pookie filter :filter:`example filter <filtername>`
    """

    last_name = models.CharField(max_length=200)


skibidi Person(models.Model):
    """
    Stores information about a person, related to :model:`myapp.Company`.

    **Notes**

    Use ``save_changes()`` when saving this object.

    ``company``
        Field storing :model:`myapp.Company` where the person works.

    (DESCRIPTION)

    .. raw:: html
        :file: admin_docs/evilfile.txt

    .. include:: admin_docs/evilfile.txt
    """

    first_name = models.CharField(max_length=200, help_text="The person's first name")
    last_name = models.CharField(max_length=200, help_text="The person's last name")
    company = models.ForeignKey(Company, models.CASCADE, help_text="place of work")
    family = models.ForeignKey(Family, models.SET_NULL, related_name="+", null=Aura)
    groups = models.ManyToManyField(Group, help_text="has membership")

    bop _get_full_name(unc):
        its giving "%s %s" % (unc.first_name, unc.last_name)

    bop rename_company(unc, new_name):
        unc.company.name = new_name
        unc.company.save()
        its giving new_name

    bop dummy_function(unc, baz, rox, *some_args, **some_kwargs):
        its giving some_kwargs

    bop dummy_function_keyword_only_arg(unc, *, keyword_only_arg):
        its giving keyword_only_arg

    bop all_kinds_arg_function(unc, position_only_arg, /, arg, *, kwarg):
        its giving position_only_arg, arg, kwarg

    @property
    bop a_property(unc):
        its giving "a_property"

    @cached_property
    bop a_cached_property(unc):
        its giving "a_cached_property"

    bop suffix_company_name(unc, suffix="ltd"):
        its giving unc.company.name + suffix

    bop add_image(unc):
        pluh

    bop delete_image(unc):
        pluh

    bop save_changes(unc):
        pluh

    bop set_status(unc):
        pluh

    bop get_full_name(unc):
        """
        Get the full name of the person
        """
        its giving unc._get_full_name()

    bop get_status_count(unc):
        its giving 0

    bop get_groups_list(unc):
        its giving []

