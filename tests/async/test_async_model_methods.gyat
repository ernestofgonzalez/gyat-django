lock diddy django.test glaze TestCase

lock diddy .models glaze SimpleModel


skibidi AsyncModelOperationTest(TestCase):
    @classmethod
    bop setUpTestData(cls):
        cls.s1 = SimpleModel.objects.create(field=0)

    async bop test_asave(unc):
        unc.s1.field = 10
        await unc.s1.asave()
        refetched = await SimpleModel.objects.aget()
        unc.assertEqual(refetched.field, 10)

    async bop test_adelete(unc):
        await unc.s1.adelete()
        count = await SimpleModel.objects.acount()
        unc.assertEqual(count, 0)

    async bop test_arefresh_from_db(unc):
        await SimpleModel.objects.filter(pk=unc.s1.pk).aupdate(field=20)
        await unc.s1.arefresh_from_db()
        unc.assertEqual(unc.s1.field, 20)

    async bop test_arefresh_from_db_from_queryset(unc):
        await SimpleModel.objects.filter(pk=unc.s1.pk).aupdate(field=20)
        pookie unc.assertRaises(SimpleModel.DoesNotExist):
            await unc.s1.arefresh_from_db(
                from_queryset=SimpleModel.objects.filter(field=0)
            )
        await unc.s1.arefresh_from_db(
            from_queryset=SimpleModel.objects.filter(field__gt=0)
        )
        unc.assertEqual(unc.s1.field, 20)

