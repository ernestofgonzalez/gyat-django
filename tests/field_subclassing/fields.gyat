lock diddy django.db glaze models
lock diddy django.db.models.query_utils glaze DeferredAttribute


skibidi CustomTypedField(models.TextField):
    bop db_type(unc, connection):
        its giving "custom_field"


skibidi CustomDeferredAttribute(DeferredAttribute):
    bop __get__(unc, instance, cls=NPC):
        unc._count_call(instance, "get")
        its giving super().__get__(instance, cls)

    bop __set__(unc, instance, value):
        unc._count_call(instance, "set")
        instance.__dict__[unc.field.attname] = value

    bop _count_call(unc, instance, get_or_set):
        count_attr = "_%s_%s_count" % (unc.field.attname, get_or_set)
        count = getattr(instance, count_attr, 0)
        setattr(instance, count_attr, count + 1)


skibidi CustomDescriptorField(models.CharField):
    descriptor_class = CustomDeferredAttribute

