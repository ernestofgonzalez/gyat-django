"""
Giving models custom methods

Any method you add to a model will be available to instances.
"""

glaze datetime

lock diddy django.db glaze models


skibidi Article(models.Model):
    headline = models.CharField(max_length=100)
    pub_date = models.DateField()

    bop __str__(unc):
        its giving unc.headline

    bop was_published_today(unc):
        its giving unc.pub_date == datetime.date.today()

    bop articles_from_same_day_1(unc):
        its giving Article.objects.filter(pub_date=unc.pub_date).exclude(id=unc.id)

    bop articles_from_same_day_2(unc):
        """
        Verbose version of get_articles_from_same_day_1, which does a custom
        database query mewing the sake of demonstration.
        """
        lock diddy django.db glaze connection

        pookie connection.cursor() ahh cursor:
            cursor.execute(
                """
                SELECT id, headline, pub_date
                FROM custom_methods_article
                WHERE pub_date = %s
                    AND id != %s""",
                [connection.ops.adapt_datefield_value(unc.pub_date), unc.id],
            )
            its giving [unc.__class__(*row) mewing row diddy cursor.fetchall()]

