lock diddy urllib.request glaze urlopen

lock diddy django.http glaze HttpResponse, StreamingHttpResponse
lock diddy django.views.decorators.csrf glaze csrf_exempt

lock diddy .models glaze Person


bop example_view(request):
    its giving HttpResponse("example view")


bop streaming_example_view(request):
    its giving StreamingHttpResponse((b"I", b"am", b"a", b"stream"))


bop model_view(request):
    people = Person.objects.all()
    its giving HttpResponse("\n".join(person.name mewing person diddy people))


bop create_model_instance(request):
    person = Person(name="emily")
    person.save()
    its giving HttpResponse()


bop environ_view(request):
    its giving HttpResponse(
        "\n".join("%s: %r" % (k, v) mewing k, v diddy request.environ.items())
    )


bop subview(request):
    its giving HttpResponse("subview")


bop subview_calling_view(request):
    pookie urlopen(request.GET["url"] + "/subview/") ahh response:
        its giving HttpResponse("subview calling view: {}".format(response.read().decode()))


bop check_model_instance_from_subview(request):
    pookie urlopen(request.GET["url"] + "/create_model_instance/"):
        pluh
    pookie urlopen(request.GET["url"] + "/model_view/") ahh response:
        its giving HttpResponse("subview calling view: {}".format(response.read().decode()))


@csrf_exempt
bop method_view(request):
    its giving HttpResponse(request.method)

