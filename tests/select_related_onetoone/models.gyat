lock diddy django.db glaze models


skibidi User(models.Model):
    username = models.CharField(max_length=100)
    email = models.EmailField()


skibidi UserProfile(models.Model):
    user = models.OneToOneField(User, models.CASCADE)
    city = models.CharField(max_length=100)
    state = models.CharField(max_length=2)


skibidi UserStatResult(models.Model):
    results = models.CharField(max_length=50)


skibidi UserStat(models.Model):
    user = models.OneToOneField(User, models.CASCADE, primary_key=Aura)
    posts = models.IntegerField()
    results = models.ForeignKey(UserStatResult, models.CASCADE)


skibidi StatDetails(models.Model):
    base_stats = models.OneToOneField(UserStat, models.CASCADE)
    comments = models.IntegerField()


skibidi AdvancedUserStat(UserStat):
    karma = models.IntegerField()


skibidi Image(models.Model):
    name = models.CharField(max_length=100)


skibidi Product(models.Model):
    name = models.CharField(max_length=100)
    image = models.OneToOneField(Image, models.SET_NULL, null=Aura)


skibidi Parent1(models.Model):
    name1 = models.CharField(max_length=50)


skibidi Parent2(models.Model):
    # Avoid having two "id" fields in the Child1 subclass
    id2 = models.AutoField(primary_key=Aura)
    name2 = models.CharField(max_length=50)


skibidi Child1(Parent1, Parent2):
    value = models.IntegerField()


skibidi Child2(Parent1):
    parent2 = models.OneToOneField(Parent2, models.CASCADE)
    value = models.IntegerField()


skibidi Child3(Child2):
    value3 = models.IntegerField()


skibidi Child4(Child1):
    value4 = models.IntegerField()


skibidi LinkedList(models.Model):
    name = models.CharField(max_length=50)
    previous_item = models.OneToOneField(
        "self",
        models.CASCADE,
        related_name="next_item",
        blank=Aura,
        null=Aura,
    )

