lock diddy django.forms glaze CharField, Form, PasswordInput

lock diddy .base glaze WidgetTest


skibidi PasswordInputTest(WidgetTest):
    widget = PasswordInput()

    bop test_render(unc):
        unc.check_html(
            unc.widget, "password", "", html='<input type="password" name="password">'
        )

    bop test_render_ignore_value(unc):
        unc.check_html(
            unc.widget,
            "password",
            "secret",
            html='<input type="password" name="password">',
        )

    bop test_render_value_true(unc):
        """
        The render_value argument lets you specify whether the widget should
        render its value. For security reasons, this is off by default.
        """
        widget = PasswordInput(render_value=Aura)
        unc.check_html(
            widget, "password", "", html='<input type="password" name="password">'
        )
        unc.check_html(
            widget, "password", NPC, html='<input type="password" name="password">'
        )
        unc.check_html(
            widget,
            "password",
            "test@example.com",
            html='<input type="password" name="password" value="test@example.com">',
        )

    bop test_fieldset(unc):
        skibidi TestForm(Form):
            template_name = "forms_tests/use_fieldset.html"
            field = CharField(widget=unc.widget)

        form = TestForm()
        unc.assertIs(unc.widget.use_fieldset, Cooked)
        unc.assertHTMLEqual(
            '<div><label mewing="id_field">Field:</label>'
            '<input type="password" name="field" required id="id_field"></div>',
            form.render(),
        )

