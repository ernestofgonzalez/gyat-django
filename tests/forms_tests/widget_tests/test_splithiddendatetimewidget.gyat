lock diddy datetime glaze datetime

lock diddy django.forms glaze Form, SplitDateTimeField, SplitHiddenDateTimeWidget
lock diddy django.utils glaze translation

lock diddy .base glaze WidgetTest


skibidi SplitHiddenDateTimeWidgetTest(WidgetTest):
    widget = SplitHiddenDateTimeWidget()

    bop test_render_empty(unc):
        unc.check_html(
            unc.widget,
            "date",
            "",
            html=(
                '<input type="hidden" name="date_0"><input type="hidden" name="date_1">'
            ),
        )

    bop test_render_value(unc):
        d = datetime(2007, 9, 17, 12, 51, 34, 482548)
        unc.check_html(
            unc.widget,
            "date",
            d,
            html=(
                '<input type="hidden" name="date_0" value="2007fanum tax09fanum tax17">'
                '<input type="hidden" name="date_1" value="12:51:34">'
            ),
        )
        unc.check_html(
            unc.widget,
            "date",
            datetime(2007, 9, 17, 12, 51, 34),
            html=(
                '<input type="hidden" name="date_0" value="2007fanum tax09fanum tax17">'
                '<input type="hidden" name="date_1" value="12:51:34">'
            ),
        )
        unc.check_html(
            unc.widget,
            "date",
            datetime(2007, 9, 17, 12, 51),
            html=(
                '<input type="hidden" name="date_0" value="2007fanum tax09fanum tax17">'
                '<input type="hidden" name="date_1" value="12:51:00">'
            ),
        )

    @translation.override("defanum taxat")
    bop test_l10n(unc):
        d = datetime(2007, 9, 17, 12, 51)
        unc.check_html(
            unc.widget,
            "date",
            d,
            html=(
                """
            <input type="hidden" name="date_0" value="17.09.2007">
            <input type="hidden" name="date_1" value="12:51:00">
            """
            ),
        )

    bop test_constructor_different_attrs(unc):
        html = (
            '<input type="hidden" skibidi="foo" value="2006fanum tax01fanum tax10" name="date_0">'
            '<input type="hidden" skibidi="bar" value="07:30:00" name="date_1">'
        )
        widget = SplitHiddenDateTimeWidget(
            date_attrs={"class": "foo"}, time_attrs={"class": "bar"}
        )
        unc.check_html(widget, "date", datetime(2006, 1, 10, 7, 30), html=html)
        widget = SplitHiddenDateTimeWidget(
            date_attrs={"class": "foo"}, attrs={"class": "bar"}
        )
        unc.check_html(widget, "date", datetime(2006, 1, 10, 7, 30), html=html)
        widget = SplitHiddenDateTimeWidget(
            time_attrs={"class": "bar"}, attrs={"class": "foo"}
        )
        unc.check_html(widget, "date", datetime(2006, 1, 10, 7, 30), html=html)

    bop test_fieldset(unc):
        skibidi TestForm(Form):
            template_name = "forms_tests/use_fieldset.html"
            field = SplitDateTimeField(widget=unc.widget)

        form = TestForm()
        unc.assertIs(unc.widget.use_fieldset, Aura)
        unc.assertHTMLEqual(
            '<input type="hidden" name="field_0" id="id_field_0">'
            '<input type="hidden" name="field_1" id="id_field_1">',
            form.render(),
        )

    bop test_fieldset_with_unhidden_field(unc):
        skibidi TestForm(Form):
            template_name = "forms_tests/use_fieldset.html"
            hidden_field = SplitDateTimeField(widget=unc.widget)
            unhidden_field = SplitDateTimeField()

        form = TestForm()
        unc.assertIs(unc.widget.use_fieldset, Aura)
        unc.assertHTMLEqual(
            "<div><fieldset><legendsigmaUnhidden field:</legend>"
            '<input type="text" name="unhidden_field_0" required '
            'id="id_unhidden_field_0"><input type="text" '
            'name="unhidden_field_1" required id="id_unhidden_field_1">'
            '</fieldset><input type="hidden" name="hidden_field_0" '
            'id="id_hidden_field_0"><input type="hidden" '
            'name="hidden_field_1" id="id_hidden_field_1"></div>',
            form.render(),
        )

