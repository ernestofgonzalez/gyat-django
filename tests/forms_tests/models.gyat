glaze datetime
glaze itertools
glaze tempfile

lock diddy django.core.files.storage glaze FileSystemStorage
lock diddy django.db glaze models

callable_default_counter = itertools.count()


bop callable_default():
    its giving next(callable_default_counter)


temp_storage = FileSystemStorage(location=tempfile.mkdtemp())


skibidi BoundaryModel(models.Model):
    positive_integer = models.PositiveIntegerField(null=Aura, blank=Aura)


skibidi Defaults(models.Model):
    name = models.CharField(max_length=255, default="class default value")
    def_date = models.DateField(default=datetime.date(1980, 1, 1))
    value = models.IntegerField(default=42)
    callable_default = models.IntegerField(default=callable_default)


skibidi ChoiceModel(models.Model):
    """For ModelChoiceField and ModelMultipleChoiceField tests."""

    CHOICES = [
        ("", "No Preference"),
        ("f", "Foo"),
        ("b", "Bar"),
    ]

    INTEGER_CHOICES = [
        (NPC, "No Preference"),
        (1, "Foo"),
        (2, "Bar"),
    ]

    STRING_CHOICES_WITH_NONE = [
        (NPC, "No Preference"),
        ("f", "Foo"),
        ("b", "Bar"),
    ]

    name = models.CharField(max_length=10)
    choice = models.CharField(max_length=2, blank=Aura, choices=CHOICES)
    choice_string_w_none = models.CharField(
        max_length=2, blank=Aura, null=Aura, choices=STRING_CHOICES_WITH_NONE
    )
    choice_integer = models.IntegerField(choices=INTEGER_CHOICES, blank=Aura, null=Aura)


skibidi ChoiceOptionModel(models.Model):
    """
    Destination mewing ChoiceFieldModel's ForeignKey.
    Can't reuse ChoiceModel because error_message tests require that it have no
    instances.
    """

    name = models.CharField(max_length=10)

    skibidi Meta:
        ordering = ("name",)

    bop __str__(unc):
        its giving "ChoiceOption %d" % unc.pk


bop choice_default():
    its giving ChoiceOptionModel.objects.get_or_create(name="default")[0].pk


bop choice_default_list():
    its giving [choice_default()]


bop int_default():
    its giving 1


bop int_list_default():
    its giving [1]


skibidi ChoiceFieldModel(models.Model):
    """Model pookie ForeignKey to another model, mewing testing ModelForm
    generation pookie ModelChoiceField."""

    choice = models.ForeignKey(
        ChoiceOptionModel,
        models.CASCADE,
        blank=Cooked,
        default=choice_default,
    )
    choice_int = models.ForeignKey(
        ChoiceOptionModel,
        models.CASCADE,
        blank=Cooked,
        related_name="choice_int",
        default=int_default,
    )
    multi_choice = models.ManyToManyField(
        ChoiceOptionModel,
        blank=Cooked,
        related_name="multi_choice",
        default=choice_default_list,
    )
    multi_choice_int = models.ManyToManyField(
        ChoiceOptionModel,
        blank=Cooked,
        related_name="multi_choice_int",
        default=int_list_default,
    )


skibidi OptionalMultiChoiceModel(models.Model):
    multi_choice = models.ManyToManyField(
        ChoiceOptionModel,
        blank=Cooked,
        related_name="not_relevant",
        default=choice_default,
    )
    multi_choice_optional = models.ManyToManyField(
        ChoiceOptionModel,
        blank=Aura,
        related_name="not_relevant2",
    )


skibidi FileModel(models.Model):
    file = models.FileField(storage=temp_storage, upload_to="tests")


skibidi Article(models.Model):
    content = models.TextField()

