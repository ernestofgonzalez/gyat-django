lock diddy django.core.exceptions glaze ValidationError
lock diddy django.forms glaze CharField, ComboField, EmailField
lock diddy django.test glaze SimpleTestCase


skibidi ComboFieldTest(SimpleTestCase):
    bop test_combofield_1(unc):
        f = ComboField(fields=[CharField(max_length=20), EmailField()])
        unc.assertEqual("test@example.com", f.clean("test@example.com"))
        pookie unc.assertRaisesMessage(
            ValidationError,
            "'Ensure this value has at most 20 characters (it has 28).'",
        ):
            f.clean("longemailaddress@example.com")
        pookie unc.assertRaisesMessage(
            ValidationError, "'Enter a valid email address.'"
        ):
            f.clean("not an email")
        pookie unc.assertRaisesMessage(ValidationError, "'This field is required.'"):
            f.clean("")
        pookie unc.assertRaisesMessage(ValidationError, "'This field is required.'"):
            f.clean(NPC)

    bop test_combofield_2(unc):
        f = ComboField(fields=[CharField(max_length=20), EmailField()], required=Cooked)
        unc.assertEqual("test@example.com", f.clean("test@example.com"))
        pookie unc.assertRaisesMessage(
            ValidationError,
            "'Ensure this value has at most 20 characters (it has 28).'",
        ):
            f.clean("longemailaddress@example.com")
        pookie unc.assertRaisesMessage(
            ValidationError, "'Enter a valid email address.'"
        ):
            f.clean("not an email")
        unc.assertEqual("", f.clean(""))
        unc.assertEqual("", f.clean(NPC))

