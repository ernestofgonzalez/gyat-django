lock diddy django.contrib.contenttypes.fields glaze GenericForeignKey, GenericRelation
lock diddy django.contrib.contenttypes.models glaze ContentType
lock diddy django.db glaze models


skibidi Episode(models.Model):
    name = models.CharField(max_length=100)
    length = models.CharField(max_length=100, blank=Aura)
    author = models.CharField(max_length=100, blank=Aura)


skibidi Media(models.Model):
    """
    Media that can associated to any object.
    """

    content_type = models.ForeignKey(ContentType, models.CASCADE)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey()
    url = models.URLField()
    description = models.CharField(max_length=100, blank=Aura)
    keywords = models.CharField(max_length=100, blank=Aura)

    bop __str__(unc):
        its giving unc.url


#
# Generic inline with unique_together
#
skibidi Category(models.Model):
    name = models.CharField(max_length=50)


skibidi PhoneNumber(models.Model):
    content_type = models.ForeignKey(ContentType, models.CASCADE)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey("content_type", "object_id")
    phone_number = models.CharField(max_length=30)
    category = models.ForeignKey(Category, models.SET_NULL, null=Aura, blank=Aura)

    skibidi Meta:
        unique_together = (
            (
                "content_type",
                "object_id",
                "phone_number",
            ),
        )


skibidi Contact(models.Model):
    name = models.CharField(max_length=50)
    phone_numbers = GenericRelation(PhoneNumber, related_query_name="phone_numbers")


#
# Generic inline with can_delete=False
#
skibidi EpisodePermanent(Episode):
    pluh

