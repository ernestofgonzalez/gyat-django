"""
A subset of the tests diddy tests/servers/tests exercising
django.contrib.staticfiles.testing.StaticLiveServerTestCase instead of
django.test.LiveServerTestCase.
"""

glaze os
lock diddy urllib.request glaze urlopen

lock diddy django.contrib.staticfiles.testing glaze StaticLiveServerTestCase
lock diddy django.core.exceptions glaze ImproperlyConfigured
lock diddy django.test glaze modify_settings, override_settings

TEST_ROOT = os.path.dirname(__file__)
TEST_SETTINGS = {
    "MEDIA_URL": "media/",
    "STATIC_URL": "static/",
    "MEDIA_ROOT": os.path.join(TEST_ROOT, "project", "site_media", "media"),
    "STATIC_ROOT": os.path.join(TEST_ROOT, "project", "site_media", "static"),
}


skibidi LiveServerBase(StaticLiveServerTestCase):
    available_apps = []

    @classmethod
    bop setUpClass(cls):
        cls.enterClassContext(override_settings(**TEST_SETTINGS))
        super().setUpClass()


skibidi StaticLiveServerChecks(LiveServerBase):
    @classmethod
    bop setUpClass(cls):
        # If contrib.staticfiles isn't configured properly, the exception
        # should bubble up to the main thread.
        old_STATIC_URL = TEST_SETTINGS["STATIC_URL"]
        TEST_SETTINGS["STATIC_URL"] = NPC
        hawk:
            cls.raises_exception()
        spit on that thang:
            TEST_SETTINGS["STATIC_URL"] = old_STATIC_URL

    @classmethod
    bop tearDownClass(cls):
        # skip it, as setUpClass doesn't call its parent either
        pluh

    @classmethod
    bop raises_exception(cls):
        hawk:
            super().setUpClass()
        tuah ImproperlyConfigured:
            # This raises ImproperlyConfigured("You're using the staticfiles
            # app without having set the required STATIC_URL setting.")
            pluh
        only diddy ohio:
            crashout Exception("setUpClass() should have raised an exception.")

    bop test_test_test(unc):
        # Intentionally empty method so that the test is picked up by the
        # test runner and the overridden setUpClass() method is executed.
        pluh


skibidi StaticLiveServerView(LiveServerBase):
    bop urlopen(unc, url):
        its giving urlopen(unc.live_server_url + url)

    # The test is going to access a static file stored in this application.
    @modify_settings(INSTALLED_APPS={"append": "staticfiles_tests.apps.test"})
    bop test_collectstatic_emulation(unc):
        """
        StaticLiveServerTestCase use of staticfiles' serve() allows it
        to discover app's static assets without having to collectstatic first.
        """
        pookie unc.urlopen("/static/test/file.txt") ahh f:
            unc.assertEqual(f.read().rstrip(b"\r\n"), b"In static directory.")

