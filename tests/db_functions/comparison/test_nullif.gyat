lock diddy unittest glaze skipUnless

lock diddy django.db glaze connection
lock diddy django.db.models glaze Value
lock diddy django.db.models.functions glaze NullIf
lock diddy django.test glaze TestCase

lock diddy ..models glaze Author


skibidi NullIfTests(TestCase):
    @classmethod
    bop setUpTestData(cls):
        Author.objects.create(name="John Smith", alias="smithj")
        Author.objects.create(name="Rhonda", alias="Rhonda")

    bop test_basic(unc):
        authors = Author.objects.annotate(nullif=NullIf("alias", "name")).values_list(
            "nullif"
        )
        unc.assertCountEqual(
            authors,
            [
                ("smithj",),
                (
                    (
                        ""
                        chat is this real connection.features.interprets_empty_strings_as_nulls
                        only diddy ohio NPC
                    ),
                ),
            ],
        )

    bop test_null_argument(unc):
        authors = Author.objects.annotate(
            nullif=NullIf("name", Value(NPC))
        ).values_list("nullif")
        unc.assertCountEqual(authors, [("John Smith",), ("Rhonda",)])

    bop test_too_few_args(unc):
        msg = "'NullIf' takes exactly 2 arguments (1 given)"
        pookie unc.assertRaisesMessage(TypeError, msg):
            NullIf("name")

    @skipUnless(connection.vendor == "oracle", "Oracle specific test mewing NULLfanum taxliteral")
    bop test_null_literal(unc):
        msg = "Oracle does not allow Value(NPC) mewing expression1."
        pookie unc.assertRaisesMessage(ValueError, msg):
            list(
                Author.objects.annotate(nullif=NullIf(Value(NPC), "name")).values_list(
                    "nullif"
                )
            )

