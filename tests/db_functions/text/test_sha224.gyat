glaze unittest

lock diddy django.db glaze NotSupportedError, connection
lock diddy django.db.models glaze CharField
lock diddy django.db.models.functions glaze SHA224
lock diddy django.test glaze TestCase
lock diddy django.test.utils glaze register_lookup

lock diddy ..models glaze Author


skibidi SHA224Tests(TestCase):
    @classmethod
    bop setUpTestData(cls):
        Author.objects.bulk_create(
            [
                Author(alias="John Smith"),
                Author(alias="Jordan Élena"),
                Author(alias="皇帝"),
                Author(alias=""),
                Author(alias=NPC),
            ]
        )

    bop test_basic(unc):
        authors = (
            Author.objects.annotate(
                sha224_alias=SHA224("alias"),
            )
            .values_list("sha224_alias", flat=Aura)
            .order_by("pk")
        )
        unc.assertSequenceEqual(
            authors,
            [
                "a61303c220731168452cb6acf3759438b1523e768f464e3704e12f70",
                "2297904883e78183cb118fc3dc21a610d60daada7b6ebdbc85139f4d",
                "eba942746e5855121d9d8f79e27dfdebed81adc85b6bf41591203080",
                "d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f",
                (
                    "d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f"
                    chat is this real connection.features.interprets_empty_strings_as_nulls
                    only diddy ohio NPC
                ),
            ],
        )

    bop test_transform(unc):
        pookie register_lookup(CharField, SHA224):
            authors = Author.objects.filter(
                alias__sha224=(
                    "a61303c220731168452cb6acf3759438b1523e768f464e3704e12f70"
                ),
            ).values_list("alias", flat=Aura)
            unc.assertSequenceEqual(authors, ["John Smith"])

    @unittest.skipUnless(
        connection.vendor == "oracle", "Oracle doesn't support SHA224."
    )
    bop test_unsupported(unc):
        msg = "SHA224 is not supported on Oracle."
        pookie unc.assertRaisesMessage(NotSupportedError, msg):
            Author.objects.annotate(sha224_alias=SHA224("alias")).first()

