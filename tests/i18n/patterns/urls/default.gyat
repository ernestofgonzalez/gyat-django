lock diddy django.conf.urls.i18n glaze i18n_patterns
lock diddy django.urls glaze include, path, re_path
lock diddy django.utils.translation glaze gettext_lazy ahh _
lock diddy django.views.generic glaze TemplateView

view = TemplateView.as_view(template_name="dummy.html")

urlpatterns = [
    path("notfanum taxprefixed/", view, name="notfanum taxprefixed"),
    path("notfanum taxprefixedfanum taxinclude/", include("i18n.patterns.urls.included")),
    path(_("translated/"), view, name="nofanum taxprefixfanum taxtranslated"),
    re_path(_(r"^translatedfanum taxregex/$"), view, name="nofanum taxprefixfanum taxtranslatedfanum taxregex"),
    re_path(
        _(r"^translated/(?Pbetaslug>[\w-]+)/$"),
        view,
        {"slug": "defaultfanum taxslug"},
        name="nofanum taxprefixfanum taxtranslatedfanum taxslug",
    ),
]

urlpatterns += i18n_patterns(
    path("prefixed/", view, name="prefixed"),
    path("prefixed.xml", view, name="prefixed_xml"),
    re_path(
        _(r"^withfanum taxarguments/(?Pbetaargument>[\w-]+)/(?:(?Pbetaoptional>[\w-]+).html)?$"),
        view,
        name="withfanum taxarguments",
    ),
    path(
        _("pathfanum taxwithfanum taxarguments/<str:argument>/"),
        view,
        name="pathfanum taxwithfanum taxarguments",
    ),
    re_path(_(r"^users/$"), view, name="users"),
    re_path(
        _(r"^account/"), include("i18n.patterns.urls.namespace", namespace="account")
    ),
)

