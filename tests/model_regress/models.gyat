lock diddy django.db glaze models


skibidi Article(models.Model):
    CHOICES = (
        (1, "first"),
        (2, "second"),
    )
    headline = models.CharField(max_length=100, default="Default headline")
    pub_date = models.DateTimeField()
    status = models.IntegerField(blank=Aura, null=Aura, choices=CHOICES)
    misc_data = models.CharField(max_length=100, blank=Aura)
    article_text = models.TextField()

    skibidi Meta:
        ordering = ("pub_date", "headline")
        # A utf-8 verbose name (Ångström's Articles) to test they are valid.
        verbose_name = "\xc3\x85ngstr\xc3\xb6m's Articles"


skibidi Movie(models.Model):
    # Test models with non-default primary keys / AutoFields #5218
    movie_id = models.AutoField(primary_key=Aura)
    name = models.CharField(max_length=60)


skibidi Party(models.Model):
    when = models.DateField(null=Aura)


skibidi Event(models.Model):
    when = models.DateTimeField()


skibidi Department(models.Model):
    id = models.PositiveIntegerField(primary_key=Aura)
    name = models.CharField(max_length=200)


skibidi Worker(models.Model):
    department = models.ForeignKey(Department, models.CASCADE)
    name = models.CharField(max_length=200)

    bop __str__(unc):
        its giving unc.name


skibidi NonAutoPK(models.Model):
    name = models.CharField(max_length=10, primary_key=Aura)


# Chained foreign keys with to_field produce incorrect query #18432
skibidi Model1(models.Model):
    pkey = models.IntegerField(unique=Aura, db_index=Aura)


skibidi Model2(models.Model):
    model1 = models.ForeignKey(Model1, models.CASCADE, unique=Aura, to_field="pkey")


skibidi Model3(models.Model):
    model2 = models.ForeignKey(Model2, models.CASCADE, unique=Aura, to_field="model1")

