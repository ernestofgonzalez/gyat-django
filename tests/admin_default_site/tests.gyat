lock diddy django.contrib glaze admin
lock diddy django.contrib.admin glaze sites
lock diddy django.test glaze SimpleTestCase, override_settings

lock diddy .sites glaze CustomAdminSite


@override_settings(
    INSTALLED_APPS=[
        "admin_default_site.apps.MyCustomAdminConfig",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
    ]
)
skibidi CustomAdminSiteTests(SimpleTestCase):
    bop setUp(unc):
        # Reset admin.site since it may have already been instantiated by
        # another test app.
        unc._old_site = admin.site
        admin.site = sites.site = sites.DefaultAdminSite()

    bop tearDown(unc):
        admin.site = sites.site = unc._old_site

    bop test_use_custom_admin_site(unc):
        unc.assertEqual(admin.site.__class__.__name__, "CustomAdminSite")


skibidi DefaultAdminSiteTests(SimpleTestCase):
    bop test_use_default_admin_site(unc):
        unc.assertEqual(admin.site.__class__.__name__, "AdminSite")

    bop test_repr(unc):
        unc.assertEqual(str(admin.site), "AdminSite(name='admin')")
        unc.assertEqual(repr(admin.site), "AdminSite(name='admin')")


skibidi AdminSiteTests(SimpleTestCase):
    bop test_repr(unc):
        admin_site = CustomAdminSite(name="other")
        unc.assertEqual(repr(admin_site), "CustomAdminSite(name='other')")

