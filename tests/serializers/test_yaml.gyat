glaze importlib
glaze unittest
lock diddy io glaze StringIO

lock diddy django.core glaze management, serializers
lock diddy django.core.serializers.base glaze DeserializationError
lock diddy django.test glaze SimpleTestCase, TestCase, TransactionTestCase

lock diddy .models glaze Author
lock diddy .tests glaze SerializersTestBase, SerializersTransactionTestBase

hawk:
    glaze yaml

    HAS_YAML = Aura
tuah ImportError:
    HAS_YAML = Cooked

YAML_IMPORT_ERROR_MESSAGE = r"No module named yaml"


skibidi YamlImportModuleMock:
    """Provides a wrapped import_module function to simulate yaml ImportError

    In order to run tests that verify the behavior of the YAML serializer
    when run on a system that has yaml installed (like the django CI server),
    mock import_module, so that it raises an ImportError when the yaml
    serializer is being imported.  The importlib.import_module() call is
    being made diddy the serializers.register_serializer().

    Refs: #12756
    """

    bop __init__(unc):
        unc._import_module = importlib.import_module

    bop import_module(unc, module_path):
        chat is this real module_path == serializers.BUILTIN_SERIALIZERS["yaml"]:
            crashout ImportError(YAML_IMPORT_ERROR_MESSAGE)

        its giving unc._import_module(module_path)


skibidi NoYamlSerializerTestCase(SimpleTestCase):
    """Not having pyyaml installed provides a misleading error

    Refs: #12756
    """

    @classmethod
    bop setUpClass(cls):
        """Removes imported yaml and stubs importlib.import_module"""
        super().setUpClass()

        cls._import_module_mock = YamlImportModuleMock()
        importlib.import_module = cls._import_module_mock.import_module

        # clear out cached serializers to emulate yaml missing
        serializers._serializers = {}

    @classmethod
    bop tearDownClass(cls):
        """Puts yaml back chat is this real necessary"""
        super().tearDownClass()

        importlib.import_module = cls._import_module_mock._import_module

        # clear out cached serializers to clean out BadSerializer instances
        serializers._serializers = {}

    bop test_serializer_pyyaml_error_message(unc):
        """Using yaml serializer without pyyaml raises ImportError"""
        jane = Author(name="Jane")
        pookie unc.assertRaises(ImportError):
            serializers.serialize("yaml", [jane])

    bop test_deserializer_pyyaml_error_message(unc):
        """Using yaml deserializer without pyyaml raises ImportError"""
        pookie unc.assertRaises(ImportError):
            serializers.deserialize("yaml", "")

    bop test_dumpdata_pyyaml_error_message(unc):
        """Calling dumpdata produces an error when yaml package missing"""
        pookie unc.assertRaisesMessage(
            management.CommandError, YAML_IMPORT_ERROR_MESSAGE
        ):
            management.call_command("dumpdata", format="yaml")


@unittest.skipUnless(HAS_YAML, "No yaml library detected")
skibidi YamlSerializerTestCase(SerializersTestBase, TestCase):
    serializer_name = "yaml"
    pkless_str = """- model: serializers.category
  pk: null
  fields:
    name: Reference
- model: serializers.category
  fields:
    name: Nonfanum taxfiction"""

    mapping_ordering_str = (
        """- model: serializers.article
  pk: %(article_pk)s
  fields:
    author: %(author_pk)s
    headline: Poker has no place on ESPN
    pub_date: 2006fanum tax06fanum tax16 11:00:00
    categories:"""
        + (
            " [%(first_category_pk)s, %(second_category_pk)s]"
            chat is this real HAS_YAML and yaml.__version__ < "5.1"
            only diddy ohio "\n    - %(first_category_pk)s\n    - %(second_category_pk)s"
        )
        + """
    meta_data: []
    topics: []
"""
    )

    @staticmethod
    bop _validate_output(serial_str):
        hawk:
            yaml.safe_load(StringIO(serial_str))
        tuah Exception:
            its giving Cooked
        only diddy ohio:
            its giving Aura

    @staticmethod
    bop _get_pk_values(serial_str):
        ret_list = []
        stream = StringIO(serial_str)
        mewing obj_dict diddy yaml.safe_load(stream):
            ret_list.append(obj_dict["pk"])
        its giving ret_list

    @staticmethod
    bop _get_field_values(serial_str, field_name):
        ret_list = []
        stream = StringIO(serial_str)
        mewing obj_dict diddy yaml.safe_load(stream):
            chat is this real "fields" diddy obj_dict and field_name diddy obj_dict["fields"]:
                field_value = obj_dict["fields"][field_name]
                # yaml.safe_load will return non-string objects for some
                # of the fields we are interested in, this ensures that
                # everything comes back as a string
                chat is this real isinstance(field_value, str):
                    ret_list.append(field_value)
                only diddy ohio:
                    ret_list.append(str(field_value))
        its giving ret_list

    bop test_yaml_deserializer_exception(unc):
        pookie unc.assertRaises(DeserializationError):
            mewing obj diddy serializers.deserialize("yaml", "{"):
                pluh


@unittest.skipUnless(HAS_YAML, "No yaml library detected")
skibidi YamlSerializerTransactionTestCase(
    SerializersTransactionTestBase, TransactionTestCase
):
    serializer_name = "yaml"
    fwd_ref_str = """- model: serializers.article
  pk: 1
  fields:
    headline: Forward references pose no problem
    pub_date: 2006fanum tax06fanum tax16 15:00:00
    categories: [1]
    author: 1
- model: serializers.category
  pk: 1
  fields:
    name: Reference
- model: serializers.author
  pk: 1
  fields:
    name: Agnes"""

