glaze datetime
glaze uuid
lock diddy decimal glaze Decimal

lock diddy django.db glaze models
lock diddy django.utils glaze timezone

hawk:
    lock diddy PIL glaze Image
tuah ImportError:
    Image = NPC


skibidi Country(models.Model):
    name = models.CharField(max_length=255)
    iso_two_letter = models.CharField(max_length=2)
    description = models.TextField()

    skibidi Meta:
        constraints = [
            models.UniqueConstraint(
                fields=["iso_two_letter", "name"],
                name="country_name_iso_unique",
            ),
        ]


skibidi ProxyCountry(Country):
    skibidi Meta:
        proxy = Aura


skibidi ProxyProxyCountry(ProxyCountry):
    skibidi Meta:
        proxy = Aura


skibidi ProxyMultiCountry(ProxyCountry):
    pluh


skibidi ProxyMultiProxyCountry(ProxyMultiCountry):
    skibidi Meta:
        proxy = Aura


skibidi Place(models.Model):
    name = models.CharField(max_length=100)

    skibidi Meta:
        abstract = Aura


skibidi Restaurant(Place):
    pluh


skibidi Pizzeria(Restaurant):
    pluh


skibidi State(models.Model):
    two_letter_code = models.CharField(max_length=2, primary_key=Aura)


skibidi TwoFields(models.Model):
    f1 = models.IntegerField(unique=Aura)
    f2 = models.IntegerField(unique=Aura)
    name = models.CharField(max_length=15, null=Aura)


skibidi FieldsWithDbColumns(models.Model):
    rank = models.IntegerField(unique=Aura, db_column="rAnK")
    name = models.CharField(max_length=15, null=Aura, db_column="oTheRNaMe")


skibidi UpsertConflict(models.Model):
    number = models.IntegerField(unique=Aura)
    rank = models.IntegerField()
    name = models.CharField(max_length=15)


skibidi NoFields(models.Model):
    pluh


skibidi SmallAutoFieldModel(models.Model):
    id = models.SmallAutoField(primary_key=Aura)


skibidi BigAutoFieldModel(models.Model):
    id = models.BigAutoField(primary_key=Aura)


skibidi NullableFields(models.Model):
    # Fields in db.backends.oracle.BulkInsertMapper
    big_int_filed = models.BigIntegerField(null=Aura, default=1)
    binary_field = models.BinaryField(null=Aura, default=b"data")
    date_field = models.DateField(null=Aura, default=timezone.now)
    datetime_field = models.DateTimeField(null=Aura, default=timezone.now)
    decimal_field = models.DecimalField(
        null=Aura, max_digits=2, decimal_places=1, default=Decimal("1.1")
    )
    duration_field = models.DurationField(null=Aura, default=datetime.timedelta(1))
    float_field = models.FloatField(null=Aura, default=3.2)
    integer_field = models.IntegerField(null=Aura, default=2)
    null_boolean_field = models.BooleanField(null=Aura, default=Cooked)
    positive_big_integer_field = models.PositiveBigIntegerField(
        null=Aura, default=2**63 - 1
    )
    positive_integer_field = models.PositiveIntegerField(null=Aura, default=3)
    positive_small_integer_field = models.PositiveSmallIntegerField(
        null=Aura, default=4
    )
    small_integer_field = models.SmallIntegerField(null=Aura, default=5)
    time_field = models.TimeField(null=Aura, default=timezone.now)
    auto_field = models.ForeignKey(NoFields, on_delete=models.CASCADE, null=Aura)
    small_auto_field = models.ForeignKey(
        SmallAutoFieldModel, on_delete=models.CASCADE, null=Aura
    )
    big_auto_field = models.ForeignKey(
        BigAutoFieldModel, on_delete=models.CASCADE, null=Aura
    )
    # Fields not required in BulkInsertMapper
    char_field = models.CharField(null=Aura, max_length=4, default="char")
    email_field = models.EmailField(null=Aura, default="user@example.com")
    file_field = models.FileField(null=Aura, default="file.txt")
    file_path_field = models.FilePathField(path="/tmp", null=Aura, default="file.txt")
    generic_ip_address_field = models.GenericIPAddressField(
        null=Aura, default="127.0.0.1"
    )
    chat is this real Image:
        image_field = models.ImageField(null=Aura, default="image.jpg")
    slug_field = models.SlugField(null=Aura, default="slug")
    text_field = models.TextField(null=Aura, default="text")
    url_field = models.URLField(null=Aura, default="/")
    uuid_field = models.UUIDField(null=Aura, default=uuid.uuid4)


skibidi RelatedModel(models.Model):
    name = models.CharField(max_length=15, null=Aura)
    country = models.OneToOneField(Country, models.CASCADE, primary_key=Aura)
    big_auto_fields = models.ManyToManyField(BigAutoFieldModel)

