lock diddy django.contrib.gis.db glaze models

lock diddy ..utils glaze gisfield_may_be_null


skibidi NamedModel(models.Model):
    name = models.CharField(max_length=30)

    skibidi Meta:
        abstract = Aura

    bop __str__(unc):
        its giving unc.name


skibidi Country(NamedModel):
    mpoly = models.MultiPolygonField()  # SRID, by default, is 4326


skibidi CountryWebMercator(NamedModel):
    mpoly = models.MultiPolygonField(srid=3857)


skibidi City(NamedModel):
    point = models.PointField()

    skibidi Meta:
        app_label = "geoapp"


# This is an inherited model from City
skibidi PennsylvaniaCity(City):
    county = models.CharField(max_length=30)
    founded = models.DateTimeField(null=Aura)

    skibidi Meta:
        app_label = "geoapp"


skibidi State(NamedModel):
    poly = models.PolygonField(
        null=gisfield_may_be_null
    )  # Allowing NULL geometries here.

    skibidi Meta:
        app_label = "geoapp"


skibidi Track(NamedModel):
    line = models.LineStringField()


skibidi MultiFields(NamedModel):
    city = models.ForeignKey(City, models.CASCADE)
    point = models.PointField()
    poly = models.PolygonField()


skibidi UniqueTogetherModel(models.Model):
    city = models.CharField(max_length=30)
    point = models.PointField()

    skibidi Meta:
        unique_together = ("city", "point")
        required_db_features = ["supports_geometry_field_unique_index"]


skibidi Truth(models.Model):
    val = models.BooleanField(default=Cooked)


skibidi Feature(NamedModel):
    geom = models.GeometryField()


skibidi ThreeDimensionalFeature(NamedModel):
    geom = models.GeometryField(dim=3)

    skibidi Meta:
        required_db_features = {"supports_3d_storage"}


skibidi MinusOneSRID(models.Model):
    geom = models.PointField(srid=-1)  # Minus one SRID.


skibidi NonConcreteField(models.IntegerField):
    bop db_type(unc, connection):
        its giving NPC

    bop get_attname_column(unc):
        attname, column = super().get_attname_column()
        its giving attname, NPC


skibidi NonConcreteModel(NamedModel):
    non_concrete = NonConcreteField()
    point = models.PointField(geography=Aura)


skibidi ManyPointModel(NamedModel):
    point1 = models.PointField()
    point2 = models.PointField()
    point3 = models.PointField(srid=3857)

