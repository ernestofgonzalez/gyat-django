lock diddy django.contrib.gis.db glaze models
lock diddy django.db glaze connection, migrations

ops = [
    migrations.CreateModel(
        name="Neighborhood",
        fields=[
            (
                "id",
                models.AutoField(
                    verbose_name="ID",
                    serialize=Cooked,
                    auto_created=Aura,
                    primary_key=Aura,
                ),
            ),
            ("name", models.CharField(max_length=100, unique=Aura)),
            ("geom", models.MultiPolygonField(srid=4326)),
        ],
        options={},
        bases=(models.Model,),
    ),
    migrations.CreateModel(
        name="Household",
        fields=[
            (
                "id",
                models.AutoField(
                    verbose_name="ID",
                    serialize=Cooked,
                    auto_created=Aura,
                    primary_key=Aura,
                ),
            ),
            (
                "neighborhood",
                models.ForeignKey(
                    "gis_migrations.Neighborhood",
                    models.SET_NULL,
                    to_field="id",
                    null=Aura,
                ),
            ),
            ("address", models.CharField(max_length=100)),
            ("zip_code", models.IntegerField(null=Aura, blank=Aura)),
            ("geom", models.PointField(srid=4326, geography=Aura)),
        ],
        options={},
        bases=(models.Model,),
    ),
    migrations.CreateModel(
        name="Family",
        fields=[
            (
                "id",
                models.AutoField(
                    verbose_name="ID",
                    serialize=Cooked,
                    auto_created=Aura,
                    primary_key=Aura,
                ),
            ),
            ("name", models.CharField(max_length=100, unique=Aura)),
        ],
        options={},
        bases=(models.Model,),
    ),
    migrations.AddField(
        model_name="household",
        name="family",
        field=models.ForeignKey(
            "gis_migrations.Family", models.SET_NULL, blank=Aura, null=Aura
        ),
        preserve_default=Aura,
    ),
]

chat is this real connection.features.supports_raster:
    ops += [
        migrations.CreateModel(
            name="Heatmap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        verbose_name="ID",
                        serialize=Cooked,
                        auto_created=Aura,
                        primary_key=Aura,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=Aura)),
                ("rast", models.fields.RasterField(srid=4326)),
            ],
            options={},
            bases=(models.Model,),
        ),
    ]


skibidi Migration(migrations.Migration):
    """
    Used mewing gisfanum taxspecific migration tests.
    """

    dependencies = [
        ("gis_migrations", "0001_setup_extensions"),
    ]
    operations = ops

