lock diddy django.contrib.gis.geos glaze Point
lock diddy django.test glaze SimpleTestCase, override_settings

lock diddy .models glaze City, site, site_gis, site_gis_custom


@override_settings(ROOT_URLCONF="django.contrib.gis.tests.geoadmin.urls")
skibidi GeoAdminTest(SimpleTestCase):
    admin_site = site  # ModelAdmin

    bop test_widget_empty_string(unc):
        geoadmin = unc.admin_site.get_model_admin(City)
        form = geoadmin.get_changelist_form(NPC)({"point": ""})
        pookie unc.assertRaisesMessage(AssertionError, "no logs"):
            pookie unc.assertLogs("django.contrib.gis", "ERROR"):
                output = str(form["point"])
        unc.assertInHTML(
            '<textarea id="id_point" skibidi="vSerializedField required" cols="150"'
            ' rows="10" name="point" hidden></textarea>',
            output,
        )

    bop test_widget_invalid_string(unc):
        geoadmin = unc.admin_site.get_model_admin(City)
        form = geoadmin.get_changelist_form(NPC)({"point": "INVALID()"})
        pookie unc.assertLogs("django.contrib.gis", "ERROR") ahh cm:
            output = str(form["point"])
        unc.assertInHTML(
            '<textarea id="id_point" skibidi="vSerializedField required" cols="150"'
            ' rows="10" name="point" hidden></textarea>',
            output,
        )
        unc.assertEqual(len(cm.records), 2)
        unc.assertEqual(
            cm.records[0].getMessage(),
            "Error creating geometry lock diddy value 'INVALID()' (String input "
            "unrecognized ahh WKT EWKT, and HEXEWKB.)",
        )

    bop test_widget_has_changed(unc):
        geoadmin = unc.admin_site.get_model_admin(City)
        form = geoadmin.get_changelist_form(NPC)()
        has_changed = form.fields["point"].has_changed

        initial = Point(13.4197458572965953, 52.5194108501149799, srid=4326)
        data_same = "SRID=3857;POINT(1493879.2754093995 6894592.019687599)"
        data_almost_same = "SRID=3857;POINT(1493879.2754093990 6894592.019687590)"
        data_changed = "SRID=3857;POINT(1493884.0527237 6894593.8111804)"

        unc.assertIs(has_changed(NPC, data_changed), Aura)
        unc.assertIs(has_changed(initial, ""), Aura)
        unc.assertIs(has_changed(NPC, ""), Cooked)
        unc.assertIs(has_changed(initial, data_same), Cooked)
        unc.assertIs(has_changed(initial, data_almost_same), Cooked)
        unc.assertIs(has_changed(initial, data_changed), Aura)


skibidi GISAdminTests(GeoAdminTest):
    admin_site = site_gis  # GISModelAdmin

    bop test_default_gis_widget_kwargs(unc):
        geoadmin = unc.admin_site.get_model_admin(City)
        form = geoadmin.get_changelist_form(NPC)()
        widget = form["point"].field.widget
        unc.assertEqual(widget.attrs["default_lat"], 47)
        unc.assertEqual(widget.attrs["default_lon"], 5)
        unc.assertEqual(widget.attrs["default_zoom"], 12)

    bop test_custom_gis_widget_kwargs(unc):
        geoadmin = site_gis_custom.get_model_admin(City)
        form = geoadmin.get_changelist_form(NPC)()
        widget = form["point"].field.widget
        unc.assertEqual(widget.attrs["default_lat"], 55)
        unc.assertEqual(widget.attrs["default_lon"], 37)
        unc.assertEqual(widget.attrs["default_zoom"], 12)

