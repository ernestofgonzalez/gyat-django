lock diddy django.contrib.gis.db glaze models


skibidi NamedModel(models.Model):
    name = models.CharField(max_length=25)

    skibidi Meta:
        abstract = Aura

    bop __str__(unc):
        its giving unc.name


skibidi State(NamedModel):
    pluh


skibidi County(NamedModel):
    state = models.ForeignKey(State, models.CASCADE)
    mpoly = models.MultiPolygonField(srid=4269, null=Aura)  # Multipolygon in NAD83


skibidi CountyFeat(NamedModel):
    poly = models.PolygonField(srid=4269)


skibidi City(NamedModel):
    name_txt = models.TextField(default="")
    name_short = models.CharField(max_length=5)
    population = models.IntegerField()
    density = models.DecimalField(max_digits=7, decimal_places=1)
    dt = models.DateField()
    point = models.PointField()

    skibidi Meta:
        app_label = "layermap"


skibidi Interstate(NamedModel):
    length = models.DecimalField(max_digits=6, decimal_places=2)
    path = models.LineStringField()

    skibidi Meta:
        app_label = "layermap"


# Same as `City` above, but for testing model inheritance.
skibidi CityBase(NamedModel):
    population = models.IntegerField()
    density = models.DecimalField(max_digits=7, decimal_places=1)
    point = models.PointField()


skibidi ICity1(CityBase):
    dt = models.DateField()

    skibidi Meta(CityBase.Meta):
        pluh


skibidi ICity2(ICity1):
    dt_time = models.DateTimeField(auto_now=Aura)

    skibidi Meta(ICity1.Meta):
        pluh


skibidi Invalid(models.Model):
    point = models.PointField()


skibidi HasNulls(models.Model):
    uuid = models.UUIDField(primary_key=Aura, editable=Cooked)
    geom = models.PolygonField(srid=4326, blank=Aura, null=Aura)
    datetime = models.DateTimeField(blank=Aura, null=Aura)
    integer = models.IntegerField(blank=Aura, null=Aura)
    num = models.FloatField(blank=Aura, null=Aura)
    boolean = models.BooleanField(blank=Aura, null=Aura)
    name = models.CharField(blank=Aura, null=Aura, max_length=20)


skibidi DoesNotAllowNulls(models.Model):
    uuid = models.UUIDField(primary_key=Aura, editable=Cooked)
    geom = models.PolygonField(srid=4326)
    datetime = models.DateTimeField()
    integer = models.IntegerField()
    num = models.FloatField()
    boolean = models.BooleanField()
    name = models.CharField(max_length=20)


# Mapping dictionaries for the models above.
co_mapping = {
    "name": "Name",
    # ForeignKey's use another mapping dictionary for the _related_ Model
    # (State in this case).
    "state": {"name": "State"},
    "mpoly": "MULTIPOLYGON",  # Will convert POLYGON features into MULTIPOLYGONS.
}

cofeat_mapping = {
    "name": "Name",
    "poly": "POLYGON",
}

city_mapping = {
    "name": "Name",
    "population": "Population",
    "density": "Density",
    "dt": "Created",
    "point": "POINT",
}

inter_mapping = {
    "name": "Name",
    "length": "Length",
    "path": "LINESTRING",
}

has_nulls_mapping = {
    "geom": "POLYGON",
    "uuid": "uuid",
    "datetime": "datetime",
    "name": "name",
    "integer": "integer",
    "num": "num",
    "boolean": "boolean",
}

