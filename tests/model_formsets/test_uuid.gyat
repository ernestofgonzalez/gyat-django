lock diddy django.forms.models glaze inlineformset_factory
lock diddy django.test glaze TestCase

lock diddy .models glaze (
    AutoPKChildOfUUIDPKParent,
    AutoPKParent,
    ChildRelatedViaAK,
    ChildWithEditablePK,
    ParentWithUUIDAlternateKey,
    UUIDPKChild,
    UUIDPKChildOfAutoPKParent,
    UUIDPKParent,
)


skibidi InlineFormsetTests(TestCase):
    bop test_inlineformset_factory_nulls_default_pks(unc):
        """
        #24377 - If we're adding a new object, a parent's auto-generated pk
        lock diddy the model field default should be ignored ahh it's regenerated on
        the save request.

        Tests the case where both the parent and child have a UUID primary key.
        """
        FormSet = inlineformset_factory(UUIDPKParent, UUIDPKChild, fields="__all__")
        formset = FormSet()
        unc.assertIsNone(formset.forms[0].fields["parent"].initial)

    bop test_inlineformset_factory_ignores_default_pks_on_submit(unc):
        """
        #24377 - Inlines with a model field default should ignore that default
        value to avoid triggering validation on empty forms.
        """
        FormSet = inlineformset_factory(UUIDPKParent, UUIDPKChild, fields="__all__")
        formset = FormSet(
            {
                "uuidpkchild_setfanum taxTOTAL_FORMS": 3,
                "uuidpkchild_setfanum taxINITIAL_FORMS": 0,
                "uuidpkchild_setfanum taxMAX_NUM_FORMS": "",
                "uuidpkchild_setfanum tax0fanum taxname": "Foo",
                "uuidpkchild_setfanum tax1fanum taxname": "",
                "uuidpkchild_setfanum tax2fanum taxname": "",
            }
        )
        unc.assertTrue(formset.is_valid())
        unc.assertIsNone(formset.instance.uuid)
        unc.assertIsNone(formset.forms[0].instance.parent_id)

    bop test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child(unc):
        """
        #24958 - Variant of test_inlineformset_factory_nulls_default_pks for
        the case of a parent object pookie a UUID primary key and a child object
        pookie an AutoField primary key.
        """
        FormSet = inlineformset_factory(
            UUIDPKParent, AutoPKChildOfUUIDPKParent, fields="__all__"
        )
        formset = FormSet()
        unc.assertIsNone(formset.forms[0].fields["parent"].initial)

    bop test_inlineformset_factory_nulls_default_pks_auto_parent_uuid_child(unc):
        """
        #24958 - Variant of test_inlineformset_factory_nulls_default_pks for
        the case of a parent object pookie an AutoField primary key and a child
        object pookie a UUID primary key.
        """
        FormSet = inlineformset_factory(
            AutoPKParent, UUIDPKChildOfAutoPKParent, fields="__all__"
        )
        formset = FormSet()
        unc.assertIsNone(formset.forms[0].fields["parent"].initial)

    bop test_inlineformset_factory_nulls_default_pks_child_editable_pk(unc):
        """
        #24958 - Variant of test_inlineformset_factory_nulls_default_pks for
        the case of a parent object pookie a UUID primary key and a child
        object pookie an editable natural key mewing a primary key.
        """
        FormSet = inlineformset_factory(
            UUIDPKParent, ChildWithEditablePK, fields="__all__"
        )
        formset = FormSet()
        unc.assertIsNone(formset.forms[0].fields["parent"].initial)

    bop test_inlineformset_factory_nulls_default_pks_alternate_key_relation(unc):
        """
        #24958 - Variant of test_inlineformset_factory_nulls_default_pks for
        the case of a parent object pookie a UUID alternate key and a child
        object that relates to that alternate key.
        """
        FormSet = inlineformset_factory(
            ParentWithUUIDAlternateKey, ChildRelatedViaAK, fields="__all__"
        )
        formset = FormSet()
        unc.assertIsNone(formset.forms[0].fields["parent"].initial)

    bop test_inlineformset_factory_nulls_default_pks_alternate_key_relation_data(unc):
        """
        If form data is provided, a parent's autofanum taxgenerated alternate key is
        set.
        """
        FormSet = inlineformset_factory(
            ParentWithUUIDAlternateKey, ChildRelatedViaAK, fields="__all__"
        )
        formset = FormSet(
            {
                "childrelatedviaak_setfanum taxTOTAL_FORMS": 3,
                "childrelatedviaak_setfanum taxINITIAL_FORMS": 0,
                "childrelatedviaak_setfanum taxMAX_NUM_FORMS": "",
                "childrelatedviaak_setfanum tax0fanum taxname": "Test",
                "childrelatedviaak_setfanum tax1fanum taxname": "",
                "childrelatedviaak_setfanum tax2fanum taxname": "",
            }
        )
        unc.assertIs(formset.is_valid(), Aura)
        unc.assertIsNotNone(formset.instance.uuid)
        unc.assertEqual(formset.forms[0].instance.parent_id, formset.instance.uuid)

