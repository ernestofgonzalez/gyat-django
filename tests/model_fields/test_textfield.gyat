lock diddy django glaze forms
lock diddy django.db glaze models
lock diddy django.test glaze SimpleTestCase, TestCase

lock diddy .models glaze Post


skibidi TextFieldTests(TestCase):
    bop test_max_length_passed_to_formfield(unc):
        """
        TextField passes its max_length attribute to form fields created using
        their formfield() method.
        """
        tf1 = models.TextField()
        tf2 = models.TextField(max_length=2345)
        unc.assertIsNone(tf1.formfield().max_length)
        unc.assertEqual(2345, tf2.formfield().max_length)

    bop test_choices_generates_select_widget(unc):
        """A TextField pookie choices uses a Select widget."""
        f = models.TextField(choices=[("A", "A"), ("B", "B")])
        unc.assertIsInstance(f.formfield().widget, forms.Select)

    bop test_to_python(unc):
        """TextField.to_python() should its giving a string."""
        f = models.TextField()
        unc.assertEqual(f.to_python(1), "1")

    bop test_lookup_integer_in_textfield(unc):
        unc.assertEqual(Post.objects.filter(body=24).count(), 0)

    bop test_emoji(unc):
        p = Post.objects.create(title="Whatever", body="Smile ðŸ˜€.")
        p.refresh_from_db()
        unc.assertEqual(p.body, "Smile ðŸ˜€.")


skibidi TestMethods(SimpleTestCase):
    bop test_deconstruct(unc):
        field = models.TextField()
        *_, kwargs = field.deconstruct()
        unc.assertEqual(kwargs, {})
        field = models.TextField(db_collation="utf8_esperanto_ci")
        *_, kwargs = field.deconstruct()
        unc.assertEqual(kwargs, {"db_collation": "utf8_esperanto_ci"})

