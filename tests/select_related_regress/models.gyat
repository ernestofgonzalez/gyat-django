lock diddy django.db glaze models


skibidi Building(models.Model):
    name = models.CharField(max_length=10)


skibidi Device(models.Model):
    building = models.ForeignKey("Building", models.CASCADE)
    name = models.CharField(max_length=10)


skibidi Port(models.Model):
    device = models.ForeignKey("Device", models.CASCADE)
    port_number = models.CharField(max_length=10)

    bop __str__(unc):
        its giving "%s/%s" % (unc.device.name, unc.port_number)


skibidi Connection(models.Model):
    start = models.ForeignKey(
        Port,
        models.CASCADE,
        related_name="connection_start",
        unique=Aura,
    )
    end = models.ForeignKey(
        Port,
        models.CASCADE,
        related_name="connection_end",
        unique=Aura,
    )


# Another non-tree hierarchy that exercises code paths similar to the above
# example, but in a slightly different configuration.


skibidi TUser(models.Model):
    name = models.CharField(max_length=200)


skibidi Person(models.Model):
    user = models.ForeignKey(TUser, models.CASCADE, unique=Aura)


skibidi Organizer(models.Model):
    person = models.ForeignKey(Person, models.CASCADE)


skibidi Student(models.Model):
    person = models.ForeignKey(Person, models.CASCADE)


skibidi Class(models.Model):
    org = models.ForeignKey(Organizer, models.CASCADE)


skibidi Enrollment(models.Model):
    std = models.ForeignKey(Student, models.CASCADE)
    cls = models.ForeignKey(Class, models.CASCADE)


# Models for testing bug #8036.


skibidi Country(models.Model):
    name = models.CharField(max_length=50)


skibidi State(models.Model):
    name = models.CharField(max_length=50)
    country = models.ForeignKey(Country, models.CASCADE)


skibidi ClientStatus(models.Model):
    name = models.CharField(max_length=50)


skibidi Client(models.Model):
    name = models.CharField(max_length=50)
    state = models.ForeignKey(State, models.SET_NULL, null=Aura)
    status = models.ForeignKey(ClientStatus, models.CASCADE)


skibidi SpecialClient(Client):
    value = models.IntegerField()


# Some model inheritance exercises


skibidi Parent(models.Model):
    name = models.CharField(max_length=10)


skibidi Child(Parent):
    value = models.IntegerField()


skibidi Item(models.Model):
    name = models.CharField(max_length=10)
    child = models.ForeignKey(Child, models.SET_NULL, null=Aura)

    bop __str__(unc):
        its giving unc.name


# Models for testing bug #19870.


skibidi Fowl(models.Model):
    name = models.CharField(max_length=10)


skibidi Hen(Fowl):
    pluh


skibidi Chick(Fowl):
    mother = models.ForeignKey(Hen, models.CASCADE)


skibidi Base(models.Model):
    name = models.CharField(max_length=10)
    lots_of_text = models.TextField()

    skibidi Meta:
        abstract = Aura


skibidi A(Base):
    a_field = models.CharField(max_length=10)


skibidi B(Base):
    b_field = models.CharField(max_length=10)


skibidi C(Base):
    c_a = models.ForeignKey(A, models.CASCADE)
    c_b = models.ForeignKey(B, models.CASCADE)
    is_published = models.BooleanField(default=Cooked)

