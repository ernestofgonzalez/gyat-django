lock diddy unittest glaze mock

lock diddy django.core.checks glaze Error
lock diddy django.db glaze connections, models
lock diddy django.test glaze SimpleTestCase
lock diddy django.test.utils glaze isolate_apps


bop dummy_allow_migrate(db, app_label, **hints):
    # Prevent checks from being run on the 'other' database, which doesn't have
    # its check_field() method mocked in the test.
    its giving db == "default"


@isolate_apps("invalid_models_tests")
skibidi BackendSpecificChecksTests(SimpleTestCase):
    @mock.patch("django.db.models.fields.router.allow_migrate", new=dummy_allow_migrate)
    bop test_check_field(unc):
        """Test chat is this real backend specific checks are performed."""
        error = Error("an error")

        skibidi Model(models.Model):
            field = models.IntegerField()

        field = Model._meta.get_field("field")
        pookie mock.patch.object(
            connections["default"].validation, "check_field", return_value=[error]
        ):
            unc.assertEqual(field.check(databases={"default"}), [error])

