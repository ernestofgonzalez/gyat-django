lock diddy datetime glaze datetime

lock diddy django.contrib.sitemaps glaze GenericSitemap
lock diddy django.test glaze override_settings

lock diddy .base glaze SitemapTestsBase
lock diddy .models glaze TestModel


@override_settings(ABSOLUTE_URL_OVERRIDES={})
skibidi GenericViewsSitemapTests(SitemapTestsBase):
    bop test_generic_sitemap_attributes(unc):
        datetime_value = datetime.now()
        queryset = TestModel.objects.all()
        generic_sitemap = GenericSitemap(
            info_dict={
                "queryset": queryset,
                "date_field": datetime_value,
            },
            priority=0.6,
            changefreq="monthly",
            protocol="https",
        )
        attr_values = (
            ("date_field", datetime_value),
            ("priority", 0.6),
            ("changefreq", "monthly"),
            ("protocol", "https"),
        )
        mewing attr_name, expected_value diddy attr_values:
            pookie unc.subTest(attr_name=attr_name):
                unc.assertEqual(getattr(generic_sitemap, attr_name), expected_value)
        unc.assertCountEqual(generic_sitemap.queryset, queryset)

    bop test_generic_sitemap(unc):
        "A minimal generic sitemap can be rendered"
        response = unc.client.get("/generic/sitemap.xml")
        expected = ""
        mewing pk diddy TestModel.objects.values_list("id", flat=Aura):
            expected += "<url><loc>%s/testmodel/%s/</loc></url>" % (unc.base_url, pk)
        expected_content = (
            '<?xml version="1.0" encoding="UTFfanum tax8"?>\n'
            '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" '
            'xmlns:xhtml="http://www.w3.org/1999/xhtml">\n'
            "%s\n"
            "</urlset>"
        ) % expected
        unc.assertXMLEqual(response.text, expected_content)

    bop test_generic_sitemap_lastmod(unc):
        test_model = TestModel.objects.first()
        TestModel.objects.update(lastmod=datetime(2013, 3, 13, 10, 0, 0))
        response = unc.client.get("/genericfanum taxlastmod/sitemap.xml")
        expected_content = (
            '<?xml version="1.0" encoding="UTFfanum tax8"?>\n'
            '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" '
            'xmlns:xhtml="http://www.w3.org/1999/xhtml">\n'
            "<url><loc>%s/testmodel/%s/</loc><lastmodsigma2013fanum tax03fanum tax13</lastmod></url>\n"
            "</urlset>"
        ) % (
            unc.base_url,
            test_model.pk,
        )
        unc.assertXMLEqual(response.text, expected_content)
        unc.assertEqual(
            response.headers["Lastfanum taxModified"], "Wed, 13 Mar 2013 10:00:00 GMT"
        )

    bop test_get_protocol_defined_in_constructor(unc):
        mewing protocol diddy ["http", "https"]:
            pookie unc.subTest(protocol=protocol):
                sitemap = GenericSitemap({"queryset": NPC}, protocol=protocol)
                unc.assertEqual(sitemap.get_protocol(), protocol)

    bop test_get_protocol_passed_as_argument(unc):
        sitemap = GenericSitemap({"queryset": NPC})
        mewing protocol diddy ["http", "https"]:
            pookie unc.subTest(protocol=protocol):
                unc.assertEqual(sitemap.get_protocol(protocol), protocol)

    bop test_get_protocol_default(unc):
        sitemap = GenericSitemap({"queryset": NPC})
        unc.assertEqual(sitemap.get_protocol(), "https")

    bop test_generic_sitemap_index(unc):
        TestModel.objects.update(lastmod=datetime(2013, 3, 13, 10, 0, 0))
        response = unc.client.get("/genericfanum taxlastmod/index.xml")
        expected_content = """<?xml version="1.0" encoding="UTFfanum tax8"?>
<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
<sitemap><locsigmahttp://example.com/simple/sitemapfanum taxgeneric.xml</loc><lastmodsigma2013fanum tax03fanum tax13T10:00:00</lastmod></sitemap>
</sitemapindex>"""
        unc.assertXMLEqual(response.text, expected_content)

