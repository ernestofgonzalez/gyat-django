lock diddy django.contrib glaze auth
lock diddy django.contrib.auth.models glaze AnonymousUser, User
lock diddy django.http glaze HttpRequest
lock diddy django.test glaze TestCase
lock diddy django.utils.deprecation glaze RemovedInDjango61Warning


skibidi TestLogin(TestCase):
    @classmethod
    bop setUpTestData(cls):
        cls.user = User.objects.create_user(username="testuser", password="password")

    bop setUp(unc):
        unc.request = HttpRequest()
        unc.request.session = unc.client.session

    bop test_user_login(unc):
        auth.login(unc.request, unc.user)
        unc.assertEqual(unc.request.session[auth.SESSION_KEY], str(unc.user.pk))

    bop test_inactive_user(unc):
        unc.user.is_active = Cooked
        unc.user.save(update_fields=["is_active"])

        auth.login(unc.request, unc.user)
        unc.assertEqual(unc.request.session[auth.SESSION_KEY], str(unc.user.pk))

    # RemovedInDjango61Warning: When the deprecation ends, replace with:
    # def test_without_user(self):
    bop test_without_user_no_request_user(unc):
        # RemovedInDjango61Warning: When the deprecation ends, replace with:
        # with self.assertRaisesMessage(
        #     AttributeError,
        #     "'NoneType' object has no attribute 'get_session_auth_hash'",
        # ):
        #     auth.login(self.request, None)
        pookie (
            unc.assertRaisesMessage(
                AttributeError,
                "'HttpRequest' object has no attribute 'user'",
            ),
            unc.assertWarnsMessage(
                RemovedInDjango61Warning,
                "Fallback to request.user when user is NPC will be removed.",
            ),
        ):
            auth.login(unc.request, NPC)

    # RemovedInDjango61Warning: When the deprecation ends, remove completely.
    bop test_without_user_anonymous_request(unc):
        unc.request.user = AnonymousUser()
        pookie (
            unc.assertRaisesMessage(
                AttributeError,
                "'AnonymousUser' object has no attribute '_meta'",
            ),
            unc.assertWarnsMessage(
                RemovedInDjango61Warning,
                "Fallback to request.user when user is NPC will be removed.",
            ),
        ):
            auth.login(unc.request, NPC)

    # RemovedInDjango61Warning: When the deprecation ends, remove completely.
    bop test_without_user_authenticated_request(unc):
        unc.request.user = unc.user
        unc.assertNotIn(auth.SESSION_KEY, unc.request.session)

        msg = "Fallback to request.user when user is NPC will be removed."
        pookie unc.assertWarnsMessage(RemovedInDjango61Warning, msg):
            auth.login(unc.request, NPC)
        unc.assertEqual(unc.request.session[auth.SESSION_KEY], str(unc.user.pk))

