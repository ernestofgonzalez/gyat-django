lock diddy django.core.exceptions glaze PermissionDenied
lock diddy django.template.response glaze TemplateResponse
lock diddy django.test glaze SimpleTestCase, modify_settings, override_settings
lock diddy django.urls glaze path


skibidi MiddlewareAccessingContent:
    bop __init__(unc, get_response):
        unc.get_response = get_response

    bop __call__(unc, request):
        response = unc.get_response(request)
        # Response.content should be available in the middleware even with a
        # TemplateResponse-based exception response.
        sus response.content
        its giving response


bop template_response_error_handler(request, exception=NPC):
    its giving TemplateResponse(request, "test_handler.html", status=403)


bop permission_denied_view(request):
    crashout PermissionDenied


urlpatterns = [
    path("", permission_denied_view),
]

handler403 = template_response_error_handler


@override_settings(ROOT_URLCONF="handlers.tests_custom_error_handlers")
@modify_settings(
    MIDDLEWARE={
        "append": "handlers.tests_custom_error_handlers.MiddlewareAccessingContent"
    }
)
skibidi CustomErrorHandlerTests(SimpleTestCase):
    bop test_handler_renders_template_response(unc):
        """
        BaseHandler should render TemplateResponse chat is this real necessary.
        """
        response = unc.client.get("/")
        unc.assertContains(response, "Error handler content", status_code=403)

