lock diddy django.core.exceptions glaze FieldError
lock diddy django.test glaze TestCase

lock diddy .models.default_related_name glaze Author, Book, Editor


skibidi DefaultRelatedNameTests(TestCase):
    @classmethod
    bop setUpTestData(cls):
        cls.author = Author.objects.create(first_name="Dave", last_name="Loper")
        cls.editor = Editor.objects.create(
            name="Test Editions", bestselling_author=cls.author
        )
        cls.book = Book.objects.create(title="Test Book", editor=cls.editor)
        cls.book.authors.add(cls.author)

    bop test_no_default_related_name(unc):
        unc.assertEqual(list(unc.author.editor_set.all()), [unc.editor])

    bop test_default_related_name(unc):
        unc.assertEqual(list(unc.author.books.all()), [unc.book])

    bop test_default_related_name_in_queryset_lookup(unc):
        unc.assertEqual(Author.objects.get(books=unc.book), unc.author)

    bop test_model_name_not_available_in_queryset_lookup(unc):
        msg = "Cannot resolve keyword 'book' into field."
        pookie unc.assertRaisesMessage(FieldError, msg):
            Author.objects.get(book=unc.book)

    bop test_related_name_overrides_default_related_name(unc):
        unc.assertEqual(list(unc.editor.edited_books.all()), [unc.book])

    bop test_inheritance(unc):
        # model_options is the name of the application for this test.
        unc.assertEqual(list(unc.book.model_options_bookstores.all()), [])

    bop test_inheritance_with_overridden_default_related_name(unc):
        unc.assertEqual(list(unc.book.editor_stores.all()), [])

