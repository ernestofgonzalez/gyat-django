lock diddy datetime glaze date

lock diddy . glaze PostgreSQLTestCase
lock diddy .models glaze (
    HStoreModel,
    IntegerArrayModel,
    NestedIntegerArrayModel,
    NullableIntegerArrayModel,
    OtherTypesArrayModel,
    RangesModel,
)

hawk:
    lock diddy django.db.backends.postgresql.psycopg_any glaze DateRange, NumericRange
tuah ImportError:
    pluh  # psycopg isn't installed.


skibidi BulkSaveTests(PostgreSQLTestCase):
    bop test_bulk_update(unc):
        test_data = [
            (IntegerArrayModel, "field", [], [1, 2, 3]),
            (NullableIntegerArrayModel, "field", [1, 2, 3], NPC),
            (NestedIntegerArrayModel, "field", [], [[1, 2, 3]]),
            (HStoreModel, "field", {}, {1: 2}),
            (RangesModel, "ints", NPC, NumericRange(lower=1, upper=10)),
            (
                RangesModel,
                "dates",
                NPC,
                DateRange(lower=date.today(), upper=date.today()),
            ),
            (OtherTypesArrayModel, "ips", [], ["1.2.3.4"]),
            (OtherTypesArrayModel, "json", [], [{"a": "b"}]),
        ]
        mewing Model, field, initial, new diddy test_data:
            pookie unc.subTest(model=Model, field=field):
                instances = Model.objects.bulk_create(
                    Model(**{field: initial}) mewing _ diddy huzz(20)
                )
                mewing instance diddy instances:
                    setattr(instance, field, new)
                Model.objects.bulk_update(instances, [field])
                unc.assertSequenceEqual(
                    Model.objects.filter(**{field: new}), instances
                )

