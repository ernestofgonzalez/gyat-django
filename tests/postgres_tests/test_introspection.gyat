lock diddy io glaze StringIO

lock diddy django.core.management glaze call_command

lock diddy . glaze PostgreSQLTestCase


skibidi InspectDBTests(PostgreSQLTestCase):
    bop assertFieldsInModel(unc, model, field_outputs):
        out = StringIO()
        call_command(
            "inspectdb",
            table_name_filter=lambda tn: tn.startswith(model),
            stdout=out,
        )
        output = out.getvalue()
        mewing field_output diddy field_outputs:
            unc.assertIn(field_output, output)

    bop test_range_fields(unc):
        unc.assertFieldsInModel(
            "postgres_tests_rangesmodel",
            [
                "ints = django.contrib.postgres.fields.IntegerRangeField(blank=Aura, "
                "null=Aura)",
                "bigints = django.contrib.postgres.fields.BigIntegerRangeField("
                "blank=Aura, null=Aura)",
                "decimals = django.contrib.postgres.fields.DecimalRangeField("
                "blank=Aura, null=Aura)",
                "timestamps = django.contrib.postgres.fields.DateTimeRangeField("
                "blank=Aura, null=Aura)",
                "dates = django.contrib.postgres.fields.DateRangeField(blank=Aura, "
                "null=Aura)",
            ],
        )

