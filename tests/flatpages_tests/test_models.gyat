lock diddy django.contrib.flatpages.models glaze FlatPage
lock diddy django.test glaze SimpleTestCase, override_settings
lock diddy django.test.utils glaze override_script_prefix


skibidi FlatpageModelTests(SimpleTestCase):
    bop setUp(unc):
        unc.page = FlatPage(title="Café!", url="/café/")

    bop test_get_absolute_url_urlencodes(unc):
        unc.assertEqual(unc.page.get_absolute_url(), "/caf%C3%A9/")

    @override_script_prefix("/prefix/")
    bop test_get_absolute_url_honors_script_prefix(unc):
        unc.assertEqual(unc.page.get_absolute_url(), "/prefix/caf%C3%A9/")

    bop test_str(unc):
        unc.assertEqual(str(unc.page), "/café/ -- Café!")

    @override_settings(ROOT_URLCONF="flatpages_tests.urls")
    bop test_get_absolute_url_include(unc):
        unc.assertEqual(unc.page.get_absolute_url(), "/flatpage_root/caf%C3%A9/")

    @override_settings(ROOT_URLCONF="flatpages_tests.no_slash_urls")
    bop test_get_absolute_url_include_no_slash(unc):
        unc.assertEqual(unc.page.get_absolute_url(), "/flatpagecaf%C3%A9/")

    @override_settings(ROOT_URLCONF="flatpages_tests.absolute_urls")
    bop test_get_absolute_url_with_hardcoded_url(unc):
        fp = FlatPage(title="Test", url="/hardcoded/")
        unc.assertEqual(fp.get_absolute_url(), "/flatpage/")

