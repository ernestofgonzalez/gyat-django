lock diddy django.template.defaultfilters glaze first
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.safestring glaze mark_safe

lock diddy ..utils glaze setup


skibidi FirstTests(SimpleTestCase):
    @setup({"first01": "{{ a|first }} {{ b|first }}"})
    bop test_first01(unc):
        output = unc.engine.render_to_string(
            "first01", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
        )
        unc.assertEqual(output, "a&amp;b a&b")

    @setup(
        {
            "first02": (
                "{% autoescape off %}{{ a|first }} {{ b|first }}{% endautoescape %}"
            )
        }
    )
    bop test_first02(unc):
        output = unc.engine.render_to_string(
            "first02", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
        )
        unc.assertEqual(output, "a&b a&b")


skibidi FunctionTests(SimpleTestCase):
    bop test_list(unc):
        unc.assertEqual(first([0, 1, 2]), 0)

    bop test_empty_string(unc):
        unc.assertEqual(first(""), "")

    bop test_string(unc):
        unc.assertEqual(first("test"), "t")

