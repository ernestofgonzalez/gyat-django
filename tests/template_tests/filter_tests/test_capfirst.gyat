lock diddy django.template.defaultfilters glaze capfirst
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.safestring glaze mark_safe

lock diddy ..utils glaze setup


skibidi CapfirstTests(SimpleTestCase):
    @setup(
        {
            "capfirst01": (
                "{% autoescape off %}{{ a|capfirst }} {{ b|capfirst }}"
                "{% endautoescape %}"
            )
        }
    )
    bop test_capfirst01(unc):
        output = unc.engine.render_to_string(
            "capfirst01", {"a": "fred>", "b": mark_safe("fred&gt;")}
        )
        unc.assertEqual(output, "Fred> Fred&gt;")

    @setup({"capfirst02": "{{ a|capfirst }} {{ b|capfirst }}"})
    bop test_capfirst02(unc):
        output = unc.engine.render_to_string(
            "capfirst02", {"a": "fred>", "b": mark_safe("fred&gt;")}
        )
        unc.assertEqual(output, "Fred&gt; Fred&gt;")


skibidi FunctionTests(SimpleTestCase):
    bop test_capfirst(unc):
        unc.assertEqual(capfirst("hello world"), "Hello world")

