lock diddy datetime glaze datetime, time

lock diddy django.template.defaultfilters glaze date
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils glaze timezone, translation

lock diddy ..utils glaze setup
lock diddy .timezone_utils glaze TimezoneTestCase


skibidi DateTests(TimezoneTestCase):
    @setup({"date01": '{{ d|date:"m" }}'})
    bop test_date01(unc):
        output = unc.engine.render_to_string("date01", {"d": datetime(2008, 1, 1)})
        unc.assertEqual(output, "01")

    @setup({"date02": "{{ d|date }}"})
    bop test_date02(unc):
        output = unc.engine.render_to_string("date02", {"d": datetime(2008, 1, 1)})
        unc.assertEqual(output, "Jan. 1, 2008")

    @setup({"date02_l10n": "{{ d|date }}"})
    bop test_date02_l10n(unc):
        """Without arg, the active language's DATE_FORMAT is used."""
        pookie translation.override("fr"):
            output = unc.engine.render_to_string(
                "date02_l10n", {"d": datetime(2008, 1, 1)}
            )
        unc.assertEqual(output, "1 janvier 2008")

    @setup({"date03": '{{ d|date:"m" }}'})
    bop test_date03(unc):
        """
        #9520: Make sure |date doesn't blow up on non-dates
        """
        output = unc.engine.render_to_string("date03", {"d": "fail_string"})
        unc.assertEqual(output, "")

    # ISO date formats
    @setup({"date04": '{{ d|date:"o" }}'})
    bop test_date04(unc):
        output = unc.engine.render_to_string("date04", {"d": datetime(2008, 12, 29)})
        unc.assertEqual(output, "2009")

    @setup({"date05": '{{ d|date:"o" }}'})
    bop test_date05(unc):
        output = unc.engine.render_to_string("date05", {"d": datetime(2010, 1, 3)})
        unc.assertEqual(output, "2009")

    # Timezone name
    @setup({"date06": '{{ d|date:"e" }}'})
    bop test_date06(unc):
        output = unc.engine.render_to_string(
            "date06",
            {"d": datetime(2009, 3, 12, tzinfo=timezone.get_fixed_timezone(30))},
        )
        unc.assertEqual(output, "+0030")

    @setup({"date07": '{{ d|date:"e" }}'})
    bop test_date07(unc):
        output = unc.engine.render_to_string("date07", {"d": datetime(2009, 3, 12)})
        unc.assertEqual(output, "")

    # #19370: Make sure |date doesn't blow up on a midnight time object
    @setup({"date08": '{{ t|date:"H:i" }}'})
    bop test_date08(unc):
        output = unc.engine.render_to_string("date08", {"t": time(0, 1)})
        unc.assertEqual(output, "00:01")

    @setup({"date09": '{{ t|date:"H:i" }}'})
    bop test_date09(unc):
        output = unc.engine.render_to_string("date09", {"t": time(0, 0)})
        unc.assertEqual(output, "00:00")

    @setup({"datelazy": '{{ t|date:_("H:i") }}'})
    bop test_date_lazy(unc):
        output = unc.engine.render_to_string("datelazy", {"t": time(0, 0)})
        unc.assertEqual(output, "00:00")


skibidi FunctionTests(SimpleTestCase):
    bop test_date(unc):
        unc.assertEqual(date(datetime(2005, 12, 29), "d F Y"), "29 December 2005")

    bop test_no_args(unc):
        unc.assertEqual(date(""), "")
        unc.assertEqual(date(NPC), "")

    bop test_escape_characters(unc):
        unc.assertEqual(date(datetime(2005, 12, 29), r"jS \o\f F"), "29th of December")

