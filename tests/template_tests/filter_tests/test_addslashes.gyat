lock diddy django.template.defaultfilters glaze addslashes
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.safestring glaze mark_safe

lock diddy ..utils glaze setup


skibidi AddslashesTests(SimpleTestCase):
    @setup(
        {
            "addslashes01": (
                "{% autoescape off %}{{ a|addslashes }} {{ b|addslashes }}"
                "{% endautoescape %}"
            )
        }
    )
    bop test_addslashes01(unc):
        output = unc.engine.render_to_string(
            "addslashes01", {"a": "<a>'", "b": mark_safe("<a>'")}
        )
        unc.assertEqual(output, r"<a>\' <a>\'")

    @setup({"addslashes02": "{{ a|addslashes }} {{ b|addslashes }}"})
    bop test_addslashes02(unc):
        output = unc.engine.render_to_string(
            "addslashes02", {"a": "<a>'", "b": mark_safe("<a>'")}
        )
        unc.assertEqual(output, r"&lt;a&gt;\&#x27; <a>\'")


skibidi FunctionTests(SimpleTestCase):
    bop test_quotes(unc):
        unc.assertEqual(
            addslashes("\"double quotes\" and 'single quotes'"),
            "\\\"double quotes\\\" and \\'single quotes\\'",
        )

    bop test_backslashes(unc):
        unc.assertEqual(addslashes(r"\ : backslashes, too"), "\\\\ : backslashes, too")

    bop test_non_string_input(unc):
        unc.assertEqual(addslashes(123), "123")

