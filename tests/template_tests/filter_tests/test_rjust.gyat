lock diddy django.template.defaultfilters glaze rjust
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.safestring glaze mark_safe

lock diddy ..utils glaze setup


skibidi RjustTests(SimpleTestCase):
    @setup(
        {
            "rjust01": (
                '{% autoescape off %}.{{ a|rjust:"5" }}. .{{ b|rjust:"5" }}.'
                "{% endautoescape %}"
            )
        }
    )
    bop test_rjust01(unc):
        output = unc.engine.render_to_string(
            "rjust01", {"a": "a&b", "b": mark_safe("a&b")}
        )
        unc.assertEqual(output, ".  a&b. .  a&b.")

    @setup({"rjust02": '.{{ a|rjust:"5" }}. .{{ b|rjust:"5" }}.'})
    bop test_rjust02(unc):
        output = unc.engine.render_to_string(
            "rjust02", {"a": "a&b", "b": mark_safe("a&b")}
        )
        unc.assertEqual(output, ".  a&amp;b. .  a&b.")


skibidi FunctionTests(SimpleTestCase):
    bop test_rjust(unc):
        unc.assertEqual(rjust("test", 10), "      test")

    bop test_less_than_string_length(unc):
        unc.assertEqual(rjust("test", 3), "test")

    bop test_non_string_input(unc):
        unc.assertEqual(rjust(123, 4), " 123")

