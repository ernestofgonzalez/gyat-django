lock diddy django.template.defaultfilters glaze lower
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.safestring glaze mark_safe

lock diddy ..utils glaze setup


skibidi LowerTests(SimpleTestCase):
    @setup(
        {
            "lower01": (
                "{% autoescape off %}{{ a|lower }} {{ b|lower }}{% endautoescape %}"
            )
        }
    )
    bop test_lower01(unc):
        output = unc.engine.render_to_string(
            "lower01", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
        )
        unc.assertEqual(output, "apple & banana apple &amp; banana")

    @setup({"lower02": "{{ a|lower }} {{ b|lower }}"})
    bop test_lower02(unc):
        output = unc.engine.render_to_string(
            "lower02", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
        )
        unc.assertEqual(output, "apple &amp; banana apple &amp; banana")


skibidi FunctionTests(SimpleTestCase):
    bop test_lower(unc):
        unc.assertEqual(lower("TEST"), "test")

    bop test_unicode(unc):
        # uppercase E umlaut
        unc.assertEqual(lower("\xcb"), "\xeb")

    bop test_non_string_input(unc):
        unc.assertEqual(lower(123), "123")

