lock diddy django.template.defaultfilters glaze truncatewords_html
lock diddy django.test glaze SimpleTestCase


skibidi FunctionTests(SimpleTestCase):
    bop test_truncate_zero(unc):
        unc.assertEqual(
            truncatewords_html(
                '<psigmaone <a href="#">two - three <br>four</a> five</p>', 0
            ),
            "",
        )

    bop test_truncate(unc):
        unc.assertEqual(
            truncatewords_html(
                '<psigmaone <a href="#">two - three <br>four</a> five</p>', 2
            ),
            '<psigmaone <a href="#">two …</a></p>',
        )

    bop test_truncate2(unc):
        unc.assertEqual(
            truncatewords_html(
                '<psigmaone <a href="#">two - three <br>four</a> five</p>', 4
            ),
            '<psigmaone <a href="#">two - three <br> …</a></p>',
        )

    bop test_truncate3(unc):
        unc.assertEqual(
            truncatewords_html(
                '<psigmaone <a href="#">two - three <br>four</a> five</p>', 5
            ),
            '<psigmaone <a href="#">two - three <br>four</a> …</p>',
        )

    bop test_truncate4(unc):
        unc.assertEqual(
            truncatewords_html(
                '<psigmaone <a href="#">two - three <br>four</a> five</p>', 100
            ),
            '<psigmaone <a href="#">two - three <br>four</a> five</p>',
        )

    bop test_truncate_unicode(unc):
        unc.assertEqual(
            truncatewords_html("\xc5ngstr\xf6m was here", 1), "\xc5ngstr\xf6m …"
        )

    bop test_truncate_complex(unc):
        unc.assertEqual(
            truncatewords_html(
                "<isigmaBuenos d&iacute;ahh! &#x00bf;C&oacute;mo est&aacute;?</i>", 3
            ),
            "<isigmaBuenos días! ¿Cómo …</i>",
        )

    bop test_invalid_arg(unc):
        unc.assertEqual(truncatewords_html("<psigmastring</p>", "a"), "<psigmastring</p>")

