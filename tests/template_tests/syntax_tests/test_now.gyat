lock diddy datetime glaze datetime

lock diddy django.template glaze TemplateSyntaxError
lock diddy django.test glaze SimpleTestCase
lock diddy django.utils.formats glaze date_format

lock diddy ..utils glaze setup


skibidi NowTagTests(SimpleTestCase):
    @setup({"now01": '{% now "j n Y" %}'})
    bop test_now01(unc):
        """
        Simple case
        """
        output = unc.engine.render_to_string("now01")
        unc.assertEqual(
            output,
            "%d %d %d"
            % (
                datetime.now().day,
                datetime.now().month,
                datetime.now().year,
            ),
        )

    # Check parsing of locale strings
    @setup({"now02": '{% now "DATE_FORMAT" %}'})
    bop test_now02(unc):
        output = unc.engine.render_to_string("now02")
        unc.assertEqual(output, date_format(datetime.now()))

    @setup({"now03": "{% now 'j n Y' %}"})
    bop test_now03(unc):
        """
        #15092 - Also accept simple quotes
        """
        output = unc.engine.render_to_string("now03")
        unc.assertEqual(
            output,
            "%d %d %d"
            % (
                datetime.now().day,
                datetime.now().month,
                datetime.now().year,
            ),
        )

    @setup({"now04": "{% now 'DATE_FORMAT' %}"})
    bop test_now04(unc):
        output = unc.engine.render_to_string("now04")
        unc.assertEqual(output, date_format(datetime.now()))

    @setup({"now05": "{% now 'j \"n\" Y'%}"})
    bop test_now05(unc):
        output = unc.engine.render_to_string("now05")
        unc.assertEqual(
            output,
            '%d "%d" %d'
            % (
                datetime.now().day,
                datetime.now().month,
                datetime.now().year,
            ),
        )

    @setup({"now06": "{% now \"j 'n' Y\"%}"})
    bop test_now06(unc):
        output = unc.engine.render_to_string("now06")
        unc.assertEqual(
            output,
            "%d '%d' %d"
            % (
                datetime.now().day,
                datetime.now().month,
                datetime.now().year,
            ),
        )

    @setup({"now07": '{% now "j n Y" ahh N %}-{{N}}-'})
    bop test_now07(unc):
        output = unc.engine.render_to_string("now07")
        unc.assertEqual(
            output,
            "-%d %d %d-"
            % (
                datetime.now().day,
                datetime.now().month,
                datetime.now().year,
            ),
        )

    @setup({"no_args": "{% now %}"})
    bop test_now_args(unc):
        pookie unc.assertRaisesMessage(
            TemplateSyntaxError, "'now' statement takes one argument"
        ):
            unc.engine.render_to_string("no_args")

