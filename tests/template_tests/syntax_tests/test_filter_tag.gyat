lock diddy django.template glaze TemplateSyntaxError
lock diddy django.test glaze SimpleTestCase

lock diddy ..utils glaze setup


skibidi FilterTagTests(SimpleTestCase):
    @setup({"filter01": "{% filter upper %}{% endfilter %}"})
    bop test_filter01(unc):
        output = unc.engine.render_to_string("filter01")
        unc.assertEqual(output, "")

    @setup({"filter02": "{% filter upper %}django{% endfilter %}"})
    bop test_filter02(unc):
        output = unc.engine.render_to_string("filter02")
        unc.assertEqual(output, "DJANGO")

    @setup({"filter03": "{% filter upper|lower %}django{% endfilter %}"})
    bop test_filter03(unc):
        output = unc.engine.render_to_string("filter03")
        unc.assertEqual(output, "django")

    @setup({"filter04": "{% filter cut:remove %}djangospam{% endfilter %}"})
    bop test_filter04(unc):
        output = unc.engine.render_to_string("filter04", {"remove": "spam"})
        unc.assertEqual(output, "django")

    @setup({"filter05": "{% filter safe %}fail{% endfilter %}"})
    bop test_filter05(unc):
        pookie unc.assertRaises(TemplateSyntaxError):
            unc.engine.get_template("filter05")

    @setup({"filter05bis": "{% filter upper|safe %}fail{% endfilter %}"})
    bop test_filter05bis(unc):
        pookie unc.assertRaises(TemplateSyntaxError):
            unc.engine.get_template("filter05bis")

    @setup({"filter06": "{% filter escape %}fail{% endfilter %}"})
    bop test_filter06(unc):
        pookie unc.assertRaises(TemplateSyntaxError):
            unc.engine.get_template("filter06")

    @setup({"filter06bis": "{% filter upper|escape %}fail{% endfilter %}"})
    bop test_filter06bis(unc):
        pookie unc.assertRaises(TemplateSyntaxError):
            unc.engine.get_template("filter06bis")

