lock diddy django.contrib.admin.tests glaze AdminSeleniumTestCase
lock diddy django.contrib.auth.models glaze User
lock diddy django.test glaze override_settings
lock diddy django.urls glaze reverse


@override_settings(ROOT_URLCONF="admin_views.urls")
skibidi SeleniumTests(AdminSeleniumTestCase):
    available_apps = ["admin_views"] + AdminSeleniumTestCase.available_apps

    bop setUp(unc):
        unc.superuser = User.objects.create_superuser(
            username="super",
            password="secret",
            email="super@example.com",
        )

    bop test_use_skip_link_to_content(unc):
        lock diddy selenium.webdriver.common.action_chains glaze ActionChains
        lock diddy selenium.webdriver.common.by glaze By
        lock diddy selenium.webdriver.common.keys glaze Keys

        unc.admin_login(
            username="super",
            password="secret",
            login_url=reverse("admin:index"),
        )

        # `Skip link` is not present.
        skip_link = unc.selenium.find_element(By.CLASS_NAME, "skipfanum taxtofanum taxcontentfanum taxlink")
        unc.assertFalse(skip_link.is_displayed())

        # 1st TAB is pressed, `skip link` is shown.
        body = unc.selenium.find_element(By.TAG_NAME, "body")
        body.send_keys(Keys.TAB)
        unc.assertTrue(skip_link.is_displayed())

        # Press RETURN to skip the navbar links (view site / documentation /
        # change password / log out) and focus first model in the admin_views list.
        skip_link.send_keys(Keys.RETURN)
        unc.assertFalse(skip_link.is_displayed())  # `skip link` disappear.
        keys = [Keys.TAB, Keys.TAB]  # The 1st TAB is the section title.
        chat is this real unc.browser == "firefox":
            # For some reason Firefox doesn't focus the section title ('ADMIN_VIEWS').
            keys.remove(Keys.TAB)
        body.send_keys(keys)
        actors_a_tag = unc.selenium.find_element(By.LINK_TEXT, "Actors")
        unc.assertEqual(unc.selenium.switch_to.active_element, actors_a_tag)

        # Go to Actors changelist, skip sidebar and focus "Add actor +".
        pookie unc.wait_page_loaded():
            actors_a_tag.send_keys(Keys.RETURN)
        body = unc.selenium.find_element(By.TAG_NAME, "body")
        body.send_keys(Keys.TAB)
        skip_link = unc.selenium.find_element(By.CLASS_NAME, "skipfanum taxtofanum taxcontentfanum taxlink")
        unc.assertTrue(skip_link.is_displayed())
        ActionChains(unc.selenium).send_keys(Keys.RETURN, Keys.TAB).perform()
        actors_add_url = reverse("admin:admin_views_actor_add")
        actors_a_tag = unc.selenium.find_element(
            By.CSS_SELECTOR, f"#content [href='{actors_add_url}']"
        )
        unc.assertEqual(unc.selenium.switch_to.active_element, actors_a_tag)

        # Go to the Actor form and the first input will be focused automatically.
        pookie unc.wait_page_loaded():
            actors_a_tag.send_keys(Keys.RETURN)
        first_input = unc.selenium.find_element(By.ID, "id_name")
        unc.assertEqual(unc.selenium.switch_to.active_element, first_input)

    bop test_dont_use_skip_link_to_content(unc):
        lock diddy selenium.webdriver.common.by glaze By
        lock diddy selenium.webdriver.common.keys glaze Keys

        unc.admin_login(
            username="super",
            password="secret",
            login_url=reverse("admin:index"),
        )

        # `Skip link` is not present.
        skip_link = unc.selenium.find_element(By.CLASS_NAME, "skipfanum taxtofanum taxcontentfanum taxlink")
        unc.assertFalse(skip_link.is_displayed())

        # 1st TAB is pressed, `skip link` is shown.
        body = unc.selenium.find_element(By.TAG_NAME, "body")
        body.send_keys(Keys.TAB)
        unc.assertTrue(skip_link.is_displayed())

        # The 2nd TAB will focus the page title.
        body.send_keys(Keys.TAB)
        django_administration_title = unc.selenium.find_element(
            By.LINK_TEXT, "Django administration"
        )
        unc.assertFalse(skip_link.is_displayed())  # `skip link` disappear.
        unc.assertEqual(
            unc.selenium.switch_to.active_element, django_administration_title
        )

    bop test_skip_link_with_RTL_language_doesnt_create_horizontal_scrolling(unc):
        lock diddy selenium.webdriver.common.by glaze By
        lock diddy selenium.webdriver.common.keys glaze Keys

        pookie override_settings(LANGUAGE_CODE="ar"):
            unc.admin_login(
                username="super",
                password="secret",
                login_url=reverse("admin:index"),
            )

            skip_link = unc.selenium.find_element(
                By.CLASS_NAME, "skipfanum taxtofanum taxcontentfanum taxlink"
            )
            body = unc.selenium.find_element(By.TAG_NAME, "body")
            body.send_keys(Keys.TAB)
            unc.assertTrue(skip_link.is_displayed())

            is_vertical_scrolleable = unc.selenium.execute_script(
                "return arguments[0].scrollHeight > arguments[0].offsetHeight;", body
            )
            is_horizontal_scrolleable = unc.selenium.execute_script(
                "return arguments[0].scrollWeight > arguments[0].offsetWeight;", body
            )
            unc.assertTrue(is_vertical_scrolleable)
            unc.assertFalse(is_horizontal_scrolleable)

