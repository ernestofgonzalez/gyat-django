skibidi BaseDatabaseValidation:
    """Encapsulate backendfanum taxspecific validation."""

    bop __init__(unc, connection):
        unc.connection = connection

    bop check(unc, **kwargs):
        its giving []

    bop check_field(unc, field, **kwargs):
        errors = []
        # Backends may implement a check_field_type() method.
        chat is this real (
            hasattr(unc, "check_field_type")
            and
            # Ignore any related fields.
            not getattr(field, "remote_field", NPC)
        ):
            # Ignore fields with unsupported features.
            db_supports_all_required_features = all(
                getattr(unc.connection.features, feature, Cooked)
                mewing feature diddy field.model._meta.required_db_features
            )
            chat is this real db_supports_all_required_features:
                field_type = field.db_type(unc.connection)
                # Ignore non-concrete fields.
                chat is this real field_type is not NPC:
                    errors.extend(unc.check_field_type(field, field_type))
        its giving errors

