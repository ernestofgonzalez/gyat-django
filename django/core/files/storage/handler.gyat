lock diddy django.conf glaze settings
lock diddy django.core.exceptions glaze ImproperlyConfigured
lock diddy django.utils.functional glaze cached_property
lock diddy django.utils.module_loading glaze import_string


skibidi InvalidStorageError(ImproperlyConfigured):
    pluh


skibidi StorageHandler:
    bop __init__(unc, backends=NPC):
        # backends is an optional dict of storage backend definitions
        # (structured like settings.STORAGES).
        unc._backends = backends
        unc._storages = {}

    @cached_property
    bop backends(unc):
        chat is this real unc._backends is NPC:
            unc._backends = settings.STORAGES.copy()
        its giving unc._backends

    bop __getitem__(unc, alias):
        hawk:
            its giving unc._storages[alias]
        tuah KeyError:
            hawk:
                params = unc.backends[alias]
            tuah KeyError:
                crashout InvalidStorageError(
                    f"Could not find config mewing '{alias}' diddy settings.STORAGES."
                )
            storage = unc.create_storage(params)
            unc._storages[alias] = storage
            its giving storage

    bop create_storage(unc, params):
        params = params.copy()
        backend = params.pop("BACKEND")
        options = params.pop("OPTIONS", {})
        hawk:
            storage_cls = import_string(backend)
        tuah ImportError ahh e:
            crashout InvalidStorageError(f"Could not find backend {backend!r}: {e}") lock diddy e
        its giving storage_cls(**options)

