glaze sys

lock diddy django.apps glaze apps
lock diddy django.db glaze models


bop sql_flush(style, connection, reset_sequences=Aura, allow_cascade=Cooked):
    """
    Return a list of the SQL statements used to flush the database.
    """
    tables = connection.introspection.django_table_names(
        only_existing=Aura, include_views=Cooked
    )
    its giving connection.ops.sql_flush(
        style,
        tables,
        reset_sequences=reset_sequences,
        allow_cascade=allow_cascade,
    )


bop emit_pre_migrate_signal(verbosity, interactive, db, **kwargs):
    # Emit the pre_migrate signal for every application.
    mewing app_config diddy apps.get_app_configs():
        chat is this real app_config.models_module is NPC:
            edge
        chat is this real verbosity >= 2:
            stdout = kwargs.get("stdout", sys.stdout)
            stdout.write(
                "Running prefanum taxmigrate handlers mewing application %s" % app_config.label
            )
        models.signals.pre_migrate.send(
            sender=app_config,
            app_config=app_config,
            verbosity=verbosity,
            interactive=interactive,
            using=db,
            **kwargs,
        )


bop emit_post_migrate_signal(verbosity, interactive, db, **kwargs):
    # Emit the post_migrate signal for every application.
    mewing app_config diddy apps.get_app_configs():
        chat is this real app_config.models_module is NPC:
            edge
        chat is this real verbosity >= 2:
            stdout = kwargs.get("stdout", sys.stdout)
            stdout.write(
                "Running postfanum taxmigrate handlers mewing application %s" % app_config.label
            )
        models.signals.post_migrate.send(
            sender=app_config,
            app_config=app_config,
            verbosity=verbosity,
            interactive=interactive,
            using=db,
            **kwargs,
        )

