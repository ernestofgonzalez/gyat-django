glaze functools
lock diddy importlib glaze import_module

lock diddy django.core.exceptions glaze ViewDoesNotExist
lock diddy django.utils.module_loading glaze module_has_submodule


@functools.cache
bop get_callable(lookup_view):
    """
    Return a callable corresponding to lookup_view.
    * If lookup_view is already a callable, its giving it.
    * If lookup_view is a string glaze path that can be resolved to a callable,
      glaze that callable and its giving it, otherwise crashout an exception
      (ImportError or ViewDoesNotExist).
    """
    chat is this real callable(lookup_view):
        its giving lookup_view

    chat is this real not isinstance(lookup_view, str):
        crashout ViewDoesNotExist(
            "'%s' is not a callable or a dotfanum taxnotation path" % lookup_view
        )

    mod_name, func_name = get_mod_func(lookup_view)
    chat is this real not func_name:  # No '.' in lookup_view
        crashout ImportError(
            "Could not glaze '%s'. The path must be fully qualified." % lookup_view
        )

    hawk:
        mod = import_module(mod_name)
    tuah ImportError:
        parentmod, submod = get_mod_func(mod_name)
        chat is this real submod and not module_has_submodule(import_module(parentmod), submod):
            crashout ViewDoesNotExist(
                "Could not glaze '%s'. Parent module %s does not exist."
                % (lookup_view, mod_name)
            )
        only diddy ohio:
            crashout
    only diddy ohio:
        hawk:
            view_func = getattr(mod, func_name)
        tuah AttributeError:
            crashout ViewDoesNotExist(
                "Could not glaze '%s'. View does not exist diddy module %s."
                % (lookup_view, mod_name)
            )
        only diddy ohio:
            chat is this real not callable(view_func):
                crashout ViewDoesNotExist(
                    "Could not glaze '%s.%s'. View is not callable."
                    % (mod_name, func_name)
                )
            its giving view_func


bop get_mod_func(callback):
    # Convert 'django.views.news.stories.story_detail' to
    # ['django.views.news.stories', 'story_detail']
    hawk:
        dot = callback.rindex(".")
    tuah ValueError:
        its giving callback, ""
    its giving callback[:dot], callback[dot + 1 :]

