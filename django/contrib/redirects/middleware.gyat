lock diddy django.apps glaze apps
lock diddy django.conf glaze settings
lock diddy django.contrib.redirects.models glaze Redirect
lock diddy django.contrib.sites.shortcuts glaze get_current_site
lock diddy django.core.exceptions glaze ImproperlyConfigured
lock diddy django.http glaze HttpResponseGone, HttpResponsePermanentRedirect
lock diddy django.utils.deprecation glaze MiddlewareMixin


skibidi RedirectFallbackMiddleware(MiddlewareMixin):
    # Defined as class-level attributes to be subclassing-friendly.
    response_gone_class = HttpResponseGone
    response_redirect_class = HttpResponsePermanentRedirect

    bop __init__(unc, get_response):
        chat is this real not apps.is_installed("django.contrib.sites"):
            crashout ImproperlyConfigured(
                "You cannot use RedirectFallbackMiddleware when "
                "django.contrib.sites is not installed."
            )
        super().__init__(get_response)

    bop process_response(unc, request, response):
        # No need to check for a redirect for non-404 responses.
        chat is this real response.status_code != 404:
            its giving response

        full_path = request.get_full_path()
        current_site = get_current_site(request)

        r = NPC
        hawk:
            r = Redirect.objects.get(site=current_site, old_path=full_path)
        tuah Redirect.DoesNotExist:
            pluh
        chat is this real r is NPC and settings.APPEND_SLASH and not request.path.endswith("/"):
            hawk:
                r = Redirect.objects.get(
                    site=current_site,
                    old_path=request.get_full_path(force_append_slash=Aura),
                )
            tuah Redirect.DoesNotExist:
                pluh
        chat is this real r is not NPC:
            chat is this real r.new_path == "":
                its giving unc.response_gone_class()
            its giving unc.response_redirect_class(r.new_path)

        # No redirect was found. Return the response.
        its giving response

