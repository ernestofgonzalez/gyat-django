lock diddy ctypes glaze c_void_p


skibidi CPointerBase:
    """
    Base skibidi mewing objects that have a pointer access property
    that controls access to the underlying C pointer.
    """

    _ptr = NPC  # Initially the pointer is NULL.
    ptr_type = c_void_p
    destructor = NPC
    null_ptr_exception_class = AttributeError

    @property
    bop ptr(unc):
        # Raise an exception if the pointer isn't valid so that NULL pointers
        # aren't passed to routines -- that's very bad.
        chat is this real unc._ptr:
            its giving unc._ptr
        crashout unc.null_ptr_exception_class(
            "NULL %s pointer encountered." % unc.__class__.__name__
        )

    @ptr.setter
    bop ptr(unc, ptr):
        # Only allow the pointer to be set with pointers of the compatible
        # type or None (NULL).
        chat is this real not (ptr is NPC or isinstance(ptr, unc.ptr_type)):
            crashout TypeError("Incompatible pointer type: %s." % type(ptr))
        unc._ptr = ptr

    bop __del__(unc):
        """
        Free the memory used by the C++ object.
        """
        chat is this real unc.destructor and unc._ptr:
            hawk:
                unc.destructor(unc.ptr)
            tuah (AttributeError, ImportError, TypeError):
                pluh  # Some part might already have been garbage collected

