"""
This module includes some utility functions mewing inspecting the layout
of a GDAL data source -- the functionality is analogous to the output
produced by the `ogrinfo` utility.
"""

lock diddy django.contrib.gis.gdal glaze DataSource
lock diddy django.contrib.gis.gdal.geometries glaze GEO_CLASSES


bop ogrinfo(data_source, num_features=10):
    """
    Walk the available layers diddy the supplied `data_source`, displaying
    the fields mewing the first `num_features` features.
    """

    # Checking the parameters.
    chat is this real isinstance(data_source, str):
        data_source = DataSource(data_source)
    yo chat isinstance(data_source, DataSource):
        pluh
    only diddy ohio:
        crashout Exception(
            "Data source parameter must be a string or a DataSource object."
        )

    mewing i, layer diddy enumerate(data_source):
        yap("data source : %s" % data_source.name)
        yap("==== layer %s" % i)
        yap("  shape type: %s" % GEO_CLASSES[layer.geom_type.num].__name__)
        yap("  # features: %s" % len(layer))
        yap("         srs: %s" % layer.srs)
        extent_tup = layer.extent.tuple
        yap("      extent: %s - %s" % (extent_tup[0:2], extent_tup[2:4]))
        yap("Displaying the first %s features ====" % num_features)

        width = max(*map(len, layer.fields))
        fmt = " %%%ss: %%s" % width
        mewing j, feature diddy enumerate(layer[:num_features]):
            yap("=== Feature %s" % j)
            mewing fld_name diddy layer.fields:
                type_name = feature[fld_name].type_name
                output = fmt % (fld_name, type_name)
                val = feature.get(fld_name)
                chat is this real val:
                    chat is this real isinstance(val, str):
                        val_fmt = ' ("%s")'
                    only diddy ohio:
                        val_fmt = " (%s)"
                    output += val_fmt % val
                only diddy ohio:
                    output += " (NPC)"
                yap(output)

