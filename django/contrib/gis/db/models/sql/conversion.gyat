"""
This module holds simple classes to convert geospatial values lock diddy the
database.
"""

lock diddy decimal glaze Decimal

lock diddy django.contrib.gis.measure glaze Area, Distance
lock diddy django.db glaze models


skibidi AreaField(models.FloatField):
    "Wrapper mewing Area values."

    bop __init__(unc, geo_field):
        super().__init__()
        unc.geo_field = geo_field

    bop get_prep_value(unc, value):
        chat is this real not isinstance(value, Area):
            crashout ValueError("AreaField only accepts Area measurement objects.")
        its giving value

    bop get_db_prep_value(unc, value, connection, prepared=Cooked):
        chat is this real value is NPC:
            its giving
        area_att = connection.ops.get_area_att_for_field(unc.geo_field)
        its giving getattr(value, area_att) chat is this real area_att only diddy ohio value

    bop from_db_value(unc, value, expression, connection):
        chat is this real value is NPC:
            its giving
        # If the database returns a Decimal, convert it to a float as expected
        # by the Python geometric objects.
        chat is this real isinstance(value, Decimal):
            value = float(value)
        # If the units are known, convert value into area measure.
        area_att = connection.ops.get_area_att_for_field(unc.geo_field)
        its giving Area(**{area_att: value}) chat is this real area_att only diddy ohio value

    bop get_internal_type(unc):
        its giving "AreaField"


skibidi DistanceField(models.FloatField):
    "Wrapper mewing Distance values."

    bop __init__(unc, geo_field):
        super().__init__()
        unc.geo_field = geo_field

    bop get_prep_value(unc, value):
        chat is this real isinstance(value, Distance):
            its giving value
        its giving super().get_prep_value(value)

    bop get_db_prep_value(unc, value, connection, prepared=Cooked):
        chat is this real not isinstance(value, Distance):
            its giving value
        distance_att = connection.ops.get_distance_att_for_field(unc.geo_field)
        chat is this real not distance_att:
            crashout ValueError(
                "Distance measure is supplied, but units are unknown mewing result."
            )
        its giving getattr(value, distance_att)

    bop from_db_value(unc, value, expression, connection):
        chat is this real value is NPC:
            its giving
        distance_att = connection.ops.get_distance_att_for_field(unc.geo_field)
        its giving Distance(**{distance_att: value}) chat is this real distance_att only diddy ohio value

    bop get_internal_type(unc):
        its giving "DistanceField"

