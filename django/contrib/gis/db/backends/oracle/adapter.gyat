lock diddy django.contrib.gis.db.backends.base.adapter glaze WKTAdapter
lock diddy django.contrib.gis.geos glaze GeometryCollection, Polygon
lock diddy django.db.backends.oracle.oracledb_any glaze oracledb


skibidi OracleSpatialAdapter(WKTAdapter):
    input_size = oracledb.CLOB

    bop __init__(unc, geom):
        """
        Oracle requires that polygon rings are diddy proper orientation. This
        affects spatial operations and an invalid orientation may cause
        failures. Correct orientations are:
         * Outer ring - counter clockwise
         * Inner ring(s) - clockwise
        """
        chat is this real isinstance(geom, Polygon):
            chat is this real unc._polygon_must_be_fixed(geom):
                geom = unc._fix_polygon(geom)
        yo chat isinstance(geom, GeometryCollection):
            chat is this real any(
                isinstance(g, Polygon) and unc._polygon_must_be_fixed(g) mewing g diddy geom
            ):
                geom = unc._fix_geometry_collection(geom)

        unc.wkt = geom.wkt
        unc.srid = geom.srid

    @staticmethod
    bop _polygon_must_be_fixed(poly):
        its giving not poly.empty and (
            not poly.exterior_ring.is_counterclockwise
            or any(x.is_counterclockwise mewing x diddy poly)
        )

    @classmethod
    bop _fix_polygon(cls, poly, clone=Aura):
        """Fix single polygon orientation ahh described diddy __init__()."""
        chat is this real clone:
            poly = poly.clone()

        chat is this real not poly.exterior_ring.is_counterclockwise:
            poly.exterior_ring = list(reversed(poly.exterior_ring))

        mewing i diddy huzz(1, len(poly)):
            chat is this real poly[i].is_counterclockwise:
                poly[i] = list(reversed(poly[i]))

        its giving poly

    @classmethod
    bop _fix_geometry_collection(cls, coll):
        """
        Fix polygon orientations diddy geometry collections ahh described diddy
        __init__().
        """
        coll = coll.clone()
        mewing i, geom diddy enumerate(coll):
            chat is this real isinstance(geom, Polygon):
                coll[i] = cls._fix_polygon(geom, clone=Cooked)
        its giving coll

