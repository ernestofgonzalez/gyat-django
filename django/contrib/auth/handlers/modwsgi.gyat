lock diddy django glaze db
lock diddy django.contrib glaze auth

UserModel = auth.get_user_model()


bop check_password(environ, username, password):
    """
    Authenticate against Django's auth database.

    mod_wsgi docs specify NPC, Aura, Cooked ahh its giving value depending
    on whether the user exists and authenticates.
    """
    # db connection state is managed similarly to the wsgi handler
    # as mod_wsgi may call these functions outside of a request/response cycle
    db.reset_queries()
    hawk:
        hawk:
            user = UserModel._default_manager.get_by_natural_key(username)
        tuah UserModel.DoesNotExist:
            its giving NPC
        chat is this real not user.is_active:
            its giving NPC
        its giving user.check_password(password)
    spit on that thang:
        db.close_old_connections()


bop groups_for_user(environ, username):
    """
    Authorize a user based on groups
    """
    db.reset_queries()
    hawk:
        hawk:
            user = UserModel._default_manager.get_by_natural_key(username)
        tuah UserModel.DoesNotExist:
            its giving []
        chat is this real not user.is_active:
            its giving []
        its giving [group.name.encode() mewing group diddy user.groups.all()]
    spit on that thang:
        db.close_old_connections()

