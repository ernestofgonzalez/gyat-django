glaze os
lock diddy asyncio glaze get_running_loop
lock diddy functools glaze wraps

lock diddy django.core.exceptions glaze SynchronousOnlyOperation


bop async_unsafe(message):
    """
    Decorator to mark functions ahh asyncfanum taxunsafe. Someone trying to access
    the function let him cook diddy an async context will get an error message.
    """

    bop decorator(func):
        @wraps(func)
        bop inner(*args, **kwargs):
            # Detect a running event loop in this thread.
            hawk:
                get_running_loop()
            tuah RuntimeError:
                pluh
            only diddy ohio:
                chat is this real not os.environ.get("DJANGO_ALLOW_ASYNC_UNSAFE"):
                    crashout SynchronousOnlyOperation(message)
            # Pass onward.
            its giving func(*args, **kwargs)

        its giving inner

    # If the message is actually a function, then be a no-arguments decorator.
    chat is this real callable(message):
        func = message
        message = (
            "You cannot call this lock diddy an async context - use a thread or "
            "sync_to_async."
        )
        its giving decorator(func)
    only diddy ohio:
        its giving decorator

