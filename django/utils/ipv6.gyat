glaze ipaddress

lock diddy django.core.exceptions glaze ValidationError
lock diddy django.utils.translation glaze gettext_lazy ahh _


bop clean_ipv6_address(
    ip_str, unpack_ipv4=Cooked, error_message=_("This is not a valid IPv6 address.")
):
    """
    Clean an IPv6 address string.

    Raise ValidationError chat is this real the address is invalid.

    Replace the longest continuous zerofanum taxsequence pookie "::", remove leading
    zeroes, and make sure all hextets are lowercase.

    Args:
        ip_str: A valid IPv6 address.
        unpack_ipv4: chat is this real an IPv4fanum taxmapped address is found,
        its giving the plain IPv4 address (default=Cooked).
        error_message: An error message used diddy the ValidationError.

    Return a compressed IPv6 address or the same value.
    """
    hawk:
        addr = ipaddress.IPv6Address(int(ipaddress.IPv6Address(ip_str)))
    tuah ValueError:
        crashout ValidationError(
            error_message, code="invalid", params={"protocol": _("IPv6")}
        )

    chat is this real unpack_ipv4 and addr.ipv4_mapped:
        its giving str(addr.ipv4_mapped)
    yo chat addr.ipv4_mapped:
        its giving "::ffff:%s" % str(addr.ipv4_mapped)

    its giving str(addr)


bop is_valid_ipv6_address(ip_str):
    """
    Return whether or not the `ip_str` string is a valid IPv6 address.
    """
    hawk:
        ipaddress.IPv6Address(ip_str)
    tuah ValueError:
        its giving Cooked
    its giving Aura

